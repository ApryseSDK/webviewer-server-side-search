{"version":3,"sources":["webpack:///./src/ui/src/components/StylePicker/ColorPicker/ColorPicker.js","webpack:///./src/ui/src/components/StylePicker/ColorPicker/index.js","webpack:///./src/ui/src/components/StylePicker/ColorPicker/ColorPicker.scss?02e7","webpack:///./src/ui/src/components/StylePicker/ColorPicker/ColorPicker.scss","webpack:///./src/ui/src/components/RichTextStyleEditor/RichTextStyleEditor.scss?fe54","webpack:///./src/ui/src/components/RichTextStyleEditor/RichTextStyleEditor.scss","webpack:///./src/ui/src/components/RichTextStyleEditor/RichTextStyleEditor.js","webpack:///./src/ui/src/components/RichTextStyleEditor/index.js","webpack:///./src/ui/src/components/StylePicker/StylePicker.scss?c539","webpack:///./src/ui/src/components/StylePicker/StylePicker.scss","webpack:///./src/ui/src/components/StylePanel/StylePanel.scss?64d9","webpack:///./src/ui/src/components/StylePanel/StylePanel.scss","webpack:///./src/ui/src/components/StylePicker/SnapModeToggle/index.js","webpack:///./src/ui/src/components/StylePicker/SnapModeToggle/SnapModeToggle.js","webpack:///./src/ui/src/helpers/stylePanelHelper.js","webpack:///./src/ui/src/components/StylePicker/StylePicker.js","webpack:///./src/ui/src/components/StylePicker/index.js","webpack:///./src/ui/src/components/StylePanel/StylePanel.js","webpack:///./src/ui/src/components/StylePanel/StylePanelContainer.js","webpack:///./src/ui/src/components/StylePanel/index.js"],"names":["parseColor","color","parsedColor","toHexString","toLowerCase","transparentIcon","width","height","className","classNames","stroke","x1","y1","x2","y2","strokeWidth","strokeLinecap","propTypes","PropTypes","any","ColorPicker","onColorChange","hasTransparentColor","activeTool","type","activeToolName","Object","values","window","Core","Tools","ToolNames","includes","EDIT","store","useStore","t","useTranslation","dispatch","useDispatch","colors","useSelector","state","selectors","getColors","useState","selectedColor","setSelectedColor","isExpanded","setIsExpanded","forceExpandRef","useRef","useEffect","current","getCustomColorAndRemove","customColor","getCustomColor","getState","actions","setCustomColor","handleAddColor","useCallback","openElement","getInstanceNode","addEventListener","Events","VISIBILITY_CHANGED","onVisibilityChanged","e","detail","element","isVisible","newColors","setColors","removeEventListener","length","openColorPickerModalWithFocus","useFocusHandler","palette","map","push","indexOf","shouldHideShowMoreButton","showCopyButtonDisabled","isDeleteDisabled","slice","i","key","onClick","aria-label","toUpperCase","active","cell","border","style","backgroundColor","Button","img","title","dataElement","ariaLabel","indexToDelete","nextIndex","splice","disabled","hidden","api","content","__esModule","default","module","options","styleTag","isApryseWebViewerWebComponent","document","head","appendChild","webComponents","getElementsByTagName","findNestedWebComponents","tagName","root","elements","querySelectorAll","forEach","el","shadowRoot","clonedStyleTags","webComponent","onload","styleNode","innerHTML","cloneNode","exports","locals","annotation","object","editor","shape","TextColor","RichTextStyle","isFreeTextAutoSize","bool","onFreeTextSizeToggle","func","onPropertyChange","onRichTextStyleChange","isRedaction","isRichTextEditMode","setIsRichTextEditMode","isTextStylePickerHidden","RichTextStyleEditor","textSizeSliderComponent","fonts","getFonts","shallowEqual","format","setFormat","editorRef","annotationRef","propertiesRef","oldSelectionRef","richTextEditModeRef","handleSelectionChange","range","oldRange","setSelection","index","getFormat","handleTextChange","getSelection","core","disableElements","DataElements","ANNOTATION_STYLE_POPUP","enableElements","StrokeStyle","err","console","error","stylesTemp","getRichTextStyle","Font","FontSize","TextAlign","TextVerticalAlign","bold","italic","underline","strikeout","size","font","calculatedFontSize","getCalculatedFontSize","handleEditorBlur","handleEditorFocus","properties","Annotations","Color","Array","isArray","lastSelectedColor","prop","undefined","applyFormat","formatKey","value","defaults","strike","quillFont","quillFontSize","originalSize","onMouseDown","preventDefault","TextStylePicker","property","blur","adjustFreeTextBoundingBox","setTimeout","getAnnotationManager","getEditBoxManager","focusBox","propertyTranslation","freeText","isAutoSized","resizeAnnotation","newSelection","currentFormat","handleTextFormatChange","stateless","isFreeText","name","handleColorChange","React","memo","SnapModeToggle","Scale","Precision","isSnapModeEnabled","wasDocumentSwappedToClientSide","getDocument","getType","workerTypes","WEBVIEWER_SERVER","isWebViewerServerDocument","isEligibleDocumentForSnapping","PDF","showMeasurementSnappingOption","isFullPDFEnabled","Choice","id","label","i18next","checked","onChange","event","enableSnapping","target","mode","getDocumentViewer","SnapMode","e_DefaultSnapMode","POINT_ON_LINE","getMeasurementTools","tool","setSnapMode","setEnableSnapMode","shouldHideStylePanelOptions","toolName","CheckBoxFormFieldCreateTool","RadioButtonFormFieldCreateTool","AddParagraphTool","AddImageContentTool","CropCreateTool","SnippingCreateTool","SignatureFormFieldCreateTool","some","getTool","shouldHideOpacitySlider","RedactionCreateTool","EraserTool","TextFormFieldCreateTool","ListBoxFormFieldCreateTool","ComboBoxFormFieldCreateTool","shouldHideTransparentFillColor","stylePanelSectionTitles","section","toolTitles","shouldHideTextStylePicker","TEXT_FORM_FIELD","LIST_BOX_FIELD","COMBO_BOX_FIELD","withCloudyStyle","defaultStrokeStyles","concat","cloudyStrokeStyle","onStyleChange","isRequired","sliderProperties","arrayOf","string","isEllipse","redactionLabelProperties","isFreeHand","showLineStyleOptions","isArc","isStamp","isInFormFieldCreationMode","startLineStyle","endLineStyle","strokeStyle","onLineStyleChange","handleRichTextStyleChange","activeType","StylePicker","saveEditorInstance","StrokeColor","strokeColor","setStrokeColor","startingLineStyle","setStartingLineStyle","endingLineStyle","setEndingLineStyle","strokeLineStyle","setStrokeLineStyle","FillColor","fillColor","setFillColor","hideStrokeStyle","RubberStampCreateTool","StampCreateTool","showFillColorAndCollapsablePanelSections","RectangleCreateTool","EllipseCreateTool","PolygonCreateTool","PolygonCloudCreateTool","EllipseMeasurementCreateTool","AreaMeasurementCreateTool","FreeTextCreateTool","CalloutCreateTool","hasFillColorAndCollapsablePanelSections","hideFillColorAndCollapsablePanelSections","shouldHideFillColorAndCollapsablePanelSections","hideStrokeSlider","TextUnderlineCreateTool","TextHighlightCreateTool","TextSquigglyCreateTool","TextStrikeoutCreateTool","CountMeasurementCreateTool","FileAttachmentCreateTool","StickyCreateTool","MarkInsertTextCreateTool","MarkReplaceTextCreateTool","shouldHideStrokeSlider","showSnapModeCheckbox","DistanceMeasurementCreateTool","ArcMeasurementCreateTool","PerimeterMeasurementCreateTool","RectangularAreaMeasurementCreateTool","CloudyRectangularAreaMeasurementCreateTool","hasSnapModeCheckbox","showTextStyle","shouldShowTextStyle","RICH_TEXT_STYLE_CONTAINER","STROKE_STYLE_CONTAINER","closeElement","ANNOTATION_POPUP","onSliderChange","Opacity","StrokeThickness","isElementDisabled","STYLE_OPTION","isElementOpen","FILL_COLOR_CONTAINER","OPACITY_CONTAINER","isStyleOptionDisabled","isStrokeStyleContainerActive","isFillColorContainerActive","isOpacityContainerActive","isTextStyleContainerActive","panelItems","togglePanelItem","openTextStyleContainer","openElements","RICH_TEXT_EDITOR","openStrokeStyleContainer","openFillColorContainer","openOpacityContainer","renderSlider","shouldHideSliderTitle","sliderProps","lineStart","circleRadius","displayProperty","getDisplayValue","Math","round","OPACITY_SLIDER","getCirclePosition","lineLength","convertRelativeCirclePositionToValue","circlePosition","withInputField","inputFieldType","min","max","step","getLocalValue","opacity","parseInt","strokeThickness","placeOfDecimal","floor","toString","split","parseFloat","toFixed","STROKE_THICKNESS_SLIDER","FONT_SIZE_SLIDER","getSliderProps","Slider","customCircleRadius","customLineStrokeWidth","renderDivider","onOpenProps","useOnFreeTextEdit","textSizeSlider","strokethicknessComponent","tabIndex","onKeyDown","role","Icon","glyph","LabelTextEditor","placeholderText","colorMapKey","Dropdown","images","defaultStartLineStyles","onClickItem","currentSelectionKey","defaultEndLineStyles","StylePanel","getToolButtonObjects","isAnnotationToolStyleSyncingEnabled","getActiveDocumentViewerKey","isPanelOpen","toolButtonObject","activeDocumentViewerKey","currentTool","getToolMode","currentToolName","colorProperties","showStyles","setShowStyles","noToolStyle","setNoToolStyle","setIsEllipse","setIsFreeText","REDACTION","setIsRedaction","defaultTool","setIsTextStylePickerHidden","setIsFreeHand","setIsArc","setIsStamp","setIsInFormFieldCreationMode","setStyle","setStartLineStyle","setEndLineStyle","setStrokeStyle","panelTitle","setPanelTitle","annotationCreateToolNames","getAnnotationCreateToolNames","getDataWithKey","mapToolNameToKey","hasLineEndings","setShowLineStyleOptions","isAutoSizeFont","setIsAutoSizeFont","setActiveTool","editorInstance","setEditorInstance","setToolMode","getPanelTitleOnAnnotationSelected","annot","isContentEditPlaceholder","ToolName","setPanelTitleForSelectedTool","updateStylePanelProps","extraStyles","FreeTextAnnotation","jsonData","inputText","uniqueFontFamilies","Set","uniqueFontSizes","hasOwnProperty","isNaN","add","trim","from","sizes","extractUniqueFontFamilies","getContents","RedactionAnnotation","OverlayText","RectangleAnnotation","isFormFieldPlaceholder","getStartStyle","getEndStyle","dashes","getStrokeStyle","handleToolModeChange","newTool","ELLIPSE","FREETEXT","FREEHAND","FREEHAND_HIGHLIGHT","ARC","STAMP","getFormFieldCreationManager","toolStyles","getToolStyles","StartLineStyle","EndLineStyle","onAnnotationSelected","annotations","action","EllipseAnnotation","FreeHandAnnotation","ArcAnnotation","StampAnnotation","AnnotationEditTool","getSelectedAnnotations","selectedAnnotations","noToolSelected","newStyle","annotationsToUpdate","hasFocus","background","colorRGB","hexToRGBA","r","g","b","a","setAnnotationStyles","setToolStyles","redrawAnnotation","sectionPropertyMap","start","middle","end","setStartStyle","lineStyle","shift","Style","Dashes","setEndStyle","handleFreeTextAutoSizeToggle","originalProperty","originalValue","activeToolRichTextStyle","getTextDecoration","richTextStyle","0","updateAnnotationRichTextStyle","complete","StylePanelContainer","DataElementWrapper"],"mappings":"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","file":"chunks/35.chunk.js","sourcesContent":["import React, { useState, useCallback, useEffect, useRef } from 'react';\nimport classNames from 'classnames';\nimport './ColorPicker.scss';\nimport { useTranslation } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport actions from 'actions';\nimport { useDispatch, useStore, useSelector } from 'react-redux';\nimport Events from 'constants/events';\nimport { getInstanceNode } from 'helpers/getRootNode';\nimport selectors from 'selectors';\nimport Button from 'components/Button';\nimport useFocusHandler from 'hooks/useFocusHandler';\n\nconst parseColor = (color) => {\n  if (!color) {\n    return color;\n  }\n  let parsedColor = color;\n  if (parsedColor?.toHexString) {\n    parsedColor = parsedColor.toHexString();\n  }\n  if (parsedColor?.toLowerCase) {\n    parsedColor = parsedColor.toLowerCase();\n  }\n\n  return parsedColor;\n};\n\nconst TRANSPARENT_COLOR = 'transparent';\n\n/* eslint-disable custom/no-hex-colors */\nconst transparentIcon = (\n  <svg\n    width=\"100%\"\n    height=\"100%\"\n    className={classNames('transparent')}\n  >\n    <line stroke=\"#d82e28\" x1=\"0\" y1=\"100%\" x2=\"100%\" y2=\"0\" strokeWidth=\"2\" strokeLinecap=\"round\" />\n  </svg>\n);\n/* eslint-enable custom/no-hex-colors */\n\n\nconst propTypes = {\n  color: PropTypes.any\n};\n\nconst ColorPicker = ({\n  onColorChange,\n  hasTransparentColor = false,\n  color,\n  activeTool,\n  type,\n}) => {\n  const activeToolName = Object.values(window.Core.Tools.ToolNames).includes(activeTool) ? activeTool : window.Core.Tools.ToolNames.EDIT;\n  const store = useStore();\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const [colors] = useSelector((state) => [\n    selectors.getColors(state, activeToolName, type),\n  ]);\n  const [selectedColor, setSelectedColor] = useState();\n  const [isExpanded, setIsExpanded] = useState(false);\n  const forceExpandRef = useRef(true);\n\n  useEffect(() => {\n    forceExpandRef.current = true;\n  }, [activeToolName, color]);\n\n  useEffect(() => {\n    if (color) {\n      setSelectedColor(parseColor(color));\n    }\n  }, [color]);\n\n  const getCustomColorAndRemove = () => {\n    const customColor = selectors.getCustomColor(store.getState());\n    dispatch(actions.setCustomColor(null));\n    return customColor;\n  };\n\n  const handleAddColor = useCallback(() => {\n    dispatch(actions.openElement('ColorPickerModal'));\n    const onVisibilityChanged = (e) => {\n      const { element, isVisible } = e.detail;\n      if (element === 'ColorPickerModal' && !isVisible) {\n        const color = parseColor(getCustomColorAndRemove());\n        if (color) {\n          if (colors.includes(color)) {\n            setSelectedColor(color);\n            onColorChange(color);\n          } else {\n            const newColors = [...colors, color];\n            dispatch(actions.setColors(newColors, activeToolName, type, true));\n            setSelectedColor(color);\n            onColorChange(color);\n          }\n        }\n      }\n      getInstanceNode().removeEventListener(Events.VISIBILITY_CHANGED, onVisibilityChanged);\n    };\n    getInstanceNode().addEventListener(Events.VISIBILITY_CHANGED, onVisibilityChanged);\n  }, [colors?.length, dispatch, setSelectedColor, onColorChange, getCustomColorAndRemove, type, activeToolName]);\n\n  const openColorPickerModalWithFocus = useFocusHandler(handleAddColor);\n\n  const handleDelete = () => {\n    const color = parseColor(selectedColor);\n    const newColors = [...colors];\n    const indexToDelete = newColors.indexOf(color);\n    if (indexToDelete > -1) {\n      const nextIndex = indexToDelete === newColors.length - 1 ? 0 : indexToDelete + 1;\n      setSelectedColor(colors[nextIndex]);\n      onColorChange(colors[nextIndex]);\n      newColors.splice(indexToDelete, 1);\n      dispatch(actions.setColors(newColors, activeToolName, type, true));\n    }\n  };\n\n  const handleCopyColor = () => {\n    const color = parseColor(selectedColor);\n    const newColors = [...colors, color];\n    dispatch(actions.setColors(newColors, activeToolName, type, true));\n  };\n\n  const toggleExpanded = () => {\n    const newValue = !isExpanded;\n    setIsExpanded(newValue);\n  };\n\n  let palette = colors.map((color) => color.toLowerCase());\n  if (hasTransparentColor) {\n    palette.push(TRANSPARENT_COLOR);\n  }\n\n  if (!selectedColor) {\n    setSelectedColor('transparent');\n  }\n\n  if (palette.indexOf(selectedColor) > 6 && !isExpanded && forceExpandRef.current) {\n    setIsExpanded(true);\n    forceExpandRef.current = false;\n  }\n\n  const shouldHideShowMoreButton = palette.length <= 7;\n  const showCopyButtonDisabled = !(selectedColor && !palette.includes(selectedColor));\n  const isDeleteDisabled = palette.length <= 1 || !showCopyButtonDisabled;\n\n  if (!isExpanded) {\n    palette = palette.slice(0, 7);\n  }\n\n  return (\n    <>\n      <div className={classNames('ColorPalette')}>\n        {palette.map((color) => parseColor(color)).map((color, i) => (\n          !color\n            ? <div key={i} className=\"dummy-cell\" />\n            : <button\n              key={i}\n              className=\"cell-container\"\n              onClick={() => {\n                setSelectedColor(color);\n                onColorChange(color);\n              }}\n              aria-label={`${t('option.colorPalette.colorLabel')} ${color?.toUpperCase?.()}`}\n            >\n              <div\n                className={classNames({\n                  'cell-outer': true,\n                  active: parseColor(selectedColor) === color || (!parseColor(selectedColor) && color === TRANSPARENT_COLOR),\n                })}\n              >\n                <div\n                  className={classNames({\n                    cell: true,\n                    border: true,\n                  })}\n                  style={{ backgroundColor: color }}\n                >\n                  {color === TRANSPARENT_COLOR && transparentIcon}\n                </div>\n              </div>\n            </button>\n        ))}\n      </div>\n      <div className=\"palette-controls\">\n        <div className=\"button-container\">\n          <Button\n            img=\"icon-header-zoom-in-line\"\n            title={t('action.addNewColor')}\n            onClick={openColorPickerModalWithFocus}\n            className=\"control-button\"\n            dataElement=\"addCustomColor\"\n            ariaLabel={`${t('action.addNewColor')} ${t('action.fromCustomColorPicker')}`}\n          />\n          <Button\n            img=\"icon-delete-line\"\n            title={t('action.deleteColor')}\n            onClick={handleDelete}\n            disabled={isDeleteDisabled}\n            className=\"control-button\"\n            dataElement=\"deleteSelectedColor\"\n            ariaLabel={`${t('action.deleteColor')} ${selectedColor}`}\n          />\n          <Button\n            img=\"icon-copy2\"\n            title={t('action.copySelectedColor')}\n            onClick={handleCopyColor}\n            disabled={showCopyButtonDisabled}\n            className=\"control-button\"\n            dataElement=\"copySelectedColor\"\n            ariaLabel={`${t('action.copySelectedColor')} ${selectedColor}`}\n          />\n        </div>\n        <button\n          className={classNames('show-more-button control-button', {\n            hidden: shouldHideShowMoreButton,\n          })}\n          onClick={toggleExpanded}\n          aria-label={t(isExpanded ? t('action.showLessColors') : t('action.showMoreColors'))}\n        >\n          {t(isExpanded ? 'message.showLess' : 'message.showMore')}\n        </button>\n      </div>\n    </>\n  );\n};\n\nColorPicker.propTypes = propTypes;\n\nexport default ColorPicker;","import ColorPicker from './ColorPicker';\n\nexport default ColorPicker;","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../../node_modules/sass-loader/dist/cjs.js!./ColorPicker.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.StylePicker .ColorPalette{display:flex;flex-wrap:wrap;display:grid;grid-template-columns:repeat(7,1fr);grid-row-gap:8px;row-gap:8px;justify-items:center}@media (-ms-high-contrast:active),(-ms-high-contrast:none){.StylePicker .ColorPalette{width:196px}}.StylePicker .ColorPalette.padding{padding:4px 12px 8px}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePicker .ColorPalette{max-width:450px;width:auto}}@media(max-width:640px)and (-ms-high-contrast:active),(max-width:640px)and (-ms-high-contrast:none){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePicker .ColorPalette{width:308px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePicker .ColorPalette{max-width:450px;width:auto}@media (-ms-high-contrast:active),(-ms-high-contrast:none){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePicker .ColorPalette{width:308px}}}.StylePicker .ColorPalette .cell-container{padding:0;border:none;background-color:transparent;flex:1 0 14%;cursor:pointer;width:var(--cell-border-size);height:var(--cell-border-size);display:flex;align-items:center;justify-content:center}:host(:not([data-tabbing=true])) .StylePicker .ColorPalette .cell-container,html:not([data-tabbing=true]) .StylePicker .ColorPalette .cell-container{outline:none}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePicker .ColorPalette .cell-container{width:44px;height:44px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePicker .ColorPalette .cell-container{width:44px;height:44px}}.StylePicker .ColorPalette .cell-container .cell-outer.active{border:1px solid var(--color-palette-border);width:var(--cell-outer-border-size);height:var(--cell-outer-border-size);border-radius:10000000px;display:flex;align-items:center;justify-content:center}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePicker .ColorPalette .cell-container .cell-outer.active{width:36px;height:36px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePicker .ColorPalette .cell-container .cell-outer.active{width:36px;height:36px}}.StylePicker .ColorPalette .cell-container .cell-outer .cell{width:18px;height:18px;border-radius:10000000px}.StylePicker .ColorPalette .cell-container .cell-outer .cell .transparent{border:2px solid var(--faded-text);border-radius:10000000px}.StylePicker .ColorPalette .cell-container .cell-outer .cell.border{border:1px solid var(--white-color-palette-border)}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePicker .ColorPalette .cell-container .cell-outer .cell{width:24px;height:24px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePicker .ColorPalette .cell-container .cell-outer .cell{width:24px;height:24px}}.StylePicker .palette-controls{padding-right:12px;padding-left:2px;display:flex;justify-content:space-between}.StylePicker .palette-controls .button-container{display:flex;grid-gap:8px;gap:8px}.StylePicker .palette-controls .control-button{display:flex;align-items:center;justify-content:center;text-align:center;min-width:32px;min-height:32px;padding:0;border:none;background-color:transparent;cursor:pointer;border-radius:4px}:host(:not([data-tabbing=true])) .StylePicker .palette-controls .control-button,html:not([data-tabbing=true]) .StylePicker .palette-controls .control-button{outline:none}.StylePicker .palette-controls .control-button.show-more-button{color:var(--ribbon-active-color)}.StylePicker .palette-controls .control-button.show-more-button:hover{background:none;color:var(--primary-button-hover)}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePicker .palette-controls .control-button.show-more-button{color:var(--ribbon-active-color)}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePicker .palette-controls .control-button.show-more-button{color:var(--ribbon-active-color)}}.StylePicker .palette-controls .control-button:disabled{cursor:no-drop}.StylePicker .palette-controls .control-button:disabled .Icon{color:var(--disabled-icon)}.StylePicker .palette-controls .control-button.hidden{display:none}.StylePicker .palette-controls .control-button.focus-visible,.StylePicker .palette-controls .control-button:focus-visible{outline:var(--focus-visible-outline)}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./RichTextStyleEditor.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}@keyframes bottom-up{0%{transform:translateY(100%)}to{transform:translateY(0)}}@keyframes up-bottom{0%{transform:translateY(0)}to{transform:translateY(100%)}}.RichTextStyleEditor{margin-bottom:16px}.RichTextStyleEditor .menu-items{margin-bottom:8px!important}.RichTextStyleEditor .menu-items .icon-grid{padding-top:12px;grid-row-gap:12px;row-gap:12px}.RichTextStyleEditor .menu-items .icon-grid .row{padding-top:0}.RichTextStyleEditor .menu-items .icon-grid .row.isRedaction{padding-bottom:8px}.RichTextStyleEditor .menu-items .icon-grid .auto-size-checkbox{padding-top:4px;padding-bottom:8px}.RichTextStyleEditor .menu-items .icon-grid .auto-size-checkbox .ui__choice__input__check--focus{outline:var(--focus-visible-outline)}.RichTextStyleEditor .Dropdown__wrapper{width:100%}.RichTextStyleEditor .Dropdown__wrapper .Dropdown{width:100%!important}.RichTextStyleEditor .Dropdown__wrapper .Dropdown__items{right:unset}.RichTextStyleEditor .FontSizeDropdown{width:100%!important}.RichTextStyleEditor .ColorPalette{padding-bottom:8px}.RichTextStyleEditor .text-size-slider{margin-top:16px}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .RichTextStyleEditor .icon-grid{display:flex;flex-direction:column}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .RichTextStyleEditor .icon-grid{display:flex;flex-direction:column}}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ColorPicker from 'components/StylePicker/ColorPicker';\nimport core from 'core';\nimport actions from 'actions';\nimport selectors from 'selectors';\nimport './RichTextStyleEditor.scss';\nimport DataElements from 'constants/dataElement';\nimport TextStylePicker from 'components/TextStylePicker';\nimport adjustFreeTextBoundingBox from 'helpers/adjustFreeTextBoundingBox';\n\nconst propTypes = {\n  annotation: PropTypes.object,\n  editor: PropTypes.object,\n  style: PropTypes.shape({\n    TextColor: PropTypes.object,\n    RichTextStyle: PropTypes.any,\n  }),\n  isFreeTextAutoSize: PropTypes.bool,\n  onFreeTextSizeToggle: PropTypes.func,\n  onPropertyChange: PropTypes.func,\n  onRichTextStyleChange: PropTypes.func,\n  isRedaction: PropTypes.bool,\n  isRichTextEditMode: PropTypes.bool,\n  setIsRichTextEditMode: PropTypes.func,\n  isTextStylePickerHidden: PropTypes.bool,\n};\n\nconst RichTextStyleEditor = ({\n  annotation, editor,\n  style,\n  isFreeTextAutoSize,\n  onFreeTextSizeToggle,\n  onPropertyChange,\n  onRichTextStyleChange,\n  isRichTextEditMode,\n  setIsRichTextEditMode,\n  isRedaction,\n  isTextStylePickerHidden,\n  activeTool,\n  textSizeSliderComponent,\n}) => {\n  const [\n    fonts,\n  ] = useSelector(\n    (state) => [\n      selectors.getFonts(state),\n    ],\n    shallowEqual,\n  );\n\n  const [format, setFormat] = useState({});\n  const editorRef = useRef(null);\n  const annotationRef = useRef(null);\n  const propertiesRef = useRef({});\n  const dispatch = useDispatch();\n  const oldSelectionRef = useRef();\n  const richTextEditModeRef = useRef();\n  richTextEditModeRef.current = isRichTextEditMode;\n\n  useEffect(() => {\n    const handleSelectionChange = (range, oldRange) => {\n      const shouldRestoreLostSelection = !range && oldRange && editorRef.current;\n      if (shouldRestoreLostSelection) {\n        editorRef.current.setSelection(oldRange.index, oldRange.length);\n      }\n      if (range && editorRef.current) {\n        setFormat(getFormat(range));\n      }\n    };\n    const handleTextChange = () => {\n      setFormat(getFormat(editorRef.current?.getSelection()));\n    };\n    core.addEventListener('editorSelectionChanged', handleSelectionChange);\n    core.addEventListener('editorTextChanged', handleTextChange);\n    // Have to disable instead of closing because annotation popup will reopen itself\n    dispatch(actions.disableElements([DataElements.ANNOTATION_STYLE_POPUP]));\n    return () => {\n      core.removeEventListener('editorSelectionChanged', handleSelectionChange);\n      core.removeEventListener('editorTextChanged', handleTextChange);\n      dispatch(actions.enableElements([DataElements.ANNOTATION_STYLE_POPUP]));\n    };\n  }, []);\n\n  useEffect(() => {\n    editorRef.current = editor;\n    annotationRef.current = annotation;\n    if (isRichTextEditMode && annotation) {\n      let StrokeStyle = 'solid';\n      try {\n        StrokeStyle = (annotation['Style'] === 'dash')\n          ? `${annotation['Style']},${annotation['Dashes']}`\n          : annotation['Style'];\n      } catch (err) {\n        console.error(err);\n      }\n      const richTextStyles = annotation.getRichTextStyle();\n      const stylesTemp = richTextStyles[0];\n\n      propertiesRef.current = {\n        Font: annotation.Font,\n        FontSize: annotation.FontSize,\n        TextAlign: annotation.TextAlign,\n        TextVerticalAlign: annotation.TextVerticalAlign,\n        bold: stylesTemp?.['font-weight'] === 'bold' ?? false,\n        italic: stylesTemp?.['font-style'] === 'italic' ?? false,\n        underline: stylesTemp?.['text-decoration']?.includes('underline')\n          || stylesTemp?.['text-decoration']?.includes('word'),\n        strikeout: stylesTemp?.['text-decoration']?.includes('line-through') ?? false,\n        size: stylesTemp?.['font-size'],\n        font: stylesTemp?.['font-family'],\n        StrokeStyle,\n        calculatedFontSize: annotation.getCalculatedFontSize()\n      };\n    }\n\n    setFormat(getFormat(editorRef.current?.getSelection()));\n\n    if (oldSelectionRef.current) {\n      editorRef.current.setSelection(oldSelectionRef.current);\n      oldSelectionRef.current = null;\n    }\n  }, [annotation, editor, isRichTextEditMode]);\n\n  useEffect(() => {\n    const handleEditorBlur = () => {\n      editorRef.current = null;\n      annotationRef.current = null;\n      setIsRichTextEditMode(false);\n    };\n    const handleEditorFocus = () => {\n      setIsRichTextEditMode(true);\n    };\n\n    core.addEventListener('editorBlur', handleEditorBlur);\n    core.addEventListener('editorFocus', handleEditorFocus);\n    return () => {\n      core.removeEventListener('editorBlur', handleEditorBlur);\n      core.removeEventListener('editorFocus', handleEditorFocus);\n    };\n  }, [dispatch]);\n\n\n  const getFormat = (range) => {\n    if (!range) {\n      return {};\n    }\n\n    const format = editorRef.current.getFormat(range.index, range.length);\n\n    if (typeof format.color === 'string') {\n      format.color = new window.Core.Annotations.Color(format.color);\n    } else if (Array.isArray(format.color)) {\n      // the selection contains multiple color, so we set the current color to the last selected color\n      const lastSelectedColor = new window.Core.Annotations.Color(format.color[format.color.length - 1]);\n      format.color = lastSelectedColor;\n    } else if (!format.color) {\n      format.color = annotationRef.current.TextColor;\n    }\n\n    const propertiesToCheck = ['font', 'size', 'originalSize'];\n\n    for (const prop of propertiesToCheck) {\n      if (format[prop] && Array.isArray(format[prop])) {\n        format[prop] = undefined;\n      }\n    }\n\n    return format;\n  };\n\n  const handleTextFormatChange = (format) => () => {\n    let { index, length } = editorRef.current.getSelection();\n    if (length === 0) {\n      oldSelectionRef.current = { index, length };\n      const newSelection = editorRef.current.getSelection();\n      index = newSelection.index;\n      length = newSelection.length;\n    }\n    const currentFormat = editorRef.current.getFormat(index, length);\n\n    applyFormat(format, !currentFormat[format]);\n  };\n\n  const handleColorChange = (name, color) => {\n    if (!richTextEditModeRef.current) {\n      onPropertyChange(name, color);\n      return;\n    }\n    applyFormat('color', color.toHexString());\n  };\n\n  const applyFormat = (formatKey, value) => {\n    if (formatKey === 'size') {\n      editorRef.current?.format('applyCustomFontSize', value);\n    } else {\n      editorRef.current?.format(formatKey, value);\n    }\n\n    if (formatKey === 'color') {\n      value = new window.Core.Annotations.Color(value);\n    }\n\n    // format the entire editor doesn't trigger the editorTextChanged event, so we set the format state here\n    setFormat({\n      ...format,\n      [formatKey]: value\n    });\n  };\n\n  // onPropertyChange\n  const handlePropertyChange = (property, value) => {\n    if (!richTextEditModeRef.current) {\n      onPropertyChange(property, value);\n      return;\n    }\n\n    const { index, length } = editorRef.current.getSelection();\n    const annotation = annotationRef.current;\n    annotation[property] = value;\n    editorRef.current.blur();\n    if (property === 'FontSize' || property === 'Font') {\n      adjustFreeTextBoundingBox(annotation);\n    }\n    setTimeout(() => {\n      oldSelectionRef.current = { index, length };\n      const editBoxManager = core.getAnnotationManager().getEditBoxManager();\n      editBoxManager.focusBox(annotation);\n    }, 0);\n  };\n\n\n  // onRichTextStyleChange\n  const handleRichTextStyleChange = (property, value) => {\n    if (!richTextEditModeRef.current) {\n      onRichTextStyleChange(property, value);\n      return;\n    }\n\n    const propertyTranslation = {\n      'font-weight': 'bold',\n      'font-style': 'italic',\n      'underline': 'underline',\n      'line-through': 'strike',\n      'font-family': 'font',\n      'font-size': 'size',\n    };\n    if (property === 'font-family' || property === 'font-size') {\n      applyFormat(propertyTranslation[property], value);\n      const freeText = annotationRef.current;\n      if (freeText.isAutoSized()) {\n        const editBoxManager = core.getAnnotationManager().getEditBoxManager();\n        editBoxManager.resizeAnnotation(freeText);\n      }\n    } else {\n      handleTextFormatChange(propertyTranslation[property])();\n    }\n  };\n\n  let properties = {};\n\n  const { RichTextStyle } = style;\n  const defaults = {\n    bold: RichTextStyle?.[0]?.['font-weight'] === 'bold' ?? false,\n    italic: RichTextStyle?.[0]?.['font-style'] === 'italic' ?? false,\n    underline: RichTextStyle?.[0]?.['text-decoration']?.includes('underline') || RichTextStyle?.[0]?.['text-decoration']?.includes('word'),\n    strikeout: RichTextStyle?.[0]?.['text-decoration']?.includes('line-through') ?? false,\n    font: RichTextStyle?.[0]?.['font-family'],\n    size: RichTextStyle?.[0]?.['font-size'],\n    StrokeStyle: 'solid',\n  };\n\n  properties = {\n    ...style,\n    ...defaults,\n  };\n\n  if (isRichTextEditMode && annotation) {\n    propertiesRef.current.bold = format.bold;\n    propertiesRef.current.italic = format.italic;\n    propertiesRef.current.underline = format.underline;\n    propertiesRef.current.strikeout = format.strike;\n    propertiesRef.current.quillFont = format.font || propertiesRef.current.Font;\n    propertiesRef.current.quillFontSize = format.originalSize || propertiesRef.current.FontSize;\n  }\n\n  return (\n    <div className=\"RichTextStyleEditor\"\n      onMouseDown={(e) => {\n        if (e.type !== 'touchstart' && isRichTextEditMode) {\n          e.preventDefault();\n        }\n      }}\n    >\n      {!isTextStylePickerHidden && (\n        <div className=\"menu-items\">\n          <TextStylePicker\n            fonts={fonts}\n            onPropertyChange={handlePropertyChange}\n            onRichTextStyleChange={handleRichTextStyleChange}\n            properties={isRichTextEditMode ? propertiesRef.current : properties}\n            stateless={true}\n            isFreeText={!isRedaction}\n            onFreeTextSizeToggle={onFreeTextSizeToggle}\n            isFreeTextAutoSize={isFreeTextAutoSize}\n            isRichTextEditMode={isRichTextEditMode}\n            isRedaction={isRedaction}\n          />\n        </div>\n      )}\n      <ColorPicker\n        onColorChange={(color) => {\n          handleColorChange('TextColor', new window.Core.Annotations.Color(color));\n        }}\n        color={isRichTextEditMode ? format.color : style['TextColor']}\n        activeTool={activeTool}\n        type={'Text'}\n      />\n      {textSizeSliderComponent}\n    </div>\n  );\n};\nRichTextStyleEditor.propTypes = propTypes;\n\nexport default React.memo(RichTextStyleEditor);\n","import RichTextStyleEditor from './RichTextStyleEditor';\n\nexport default RichTextStyleEditor;","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./StylePicker.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.StylePicker{display:flex;flex-direction:column}.StylePicker .slider-property{font-size:14px;font-weight:700;margin-bottom:8px!important}.StylePicker .StyleOption{margin-bottom:16px}.StylePicker .StyleOption .styles-container .styles-title{margin:0 0 8px;font-size:14px;font-weight:700}.StylePicker .StyleOption .styles-container [data-element=borderStylePicker]{margin-top:8px}.StylePicker .StyleOption .slider:only-child{margin-bottom:0}.StylePicker .StyleOption .slider .slider-element-container{margin-left:-3px}.StylePicker .StyleOption:last-child{margin-bottom:0}.StylePicker .PanelSection{margin-bottom:16px}.StylePicker .PanelSection .PanelSubsection{margin-bottom:12px}.StylePicker .PanelSection .PanelSubsection .menu-subtitle{font-size:14px;font-weight:700;margin-bottom:12px}.StylePicker .PanelSection .collapsible-menu{width:100%;display:flex;cursor:pointer;position:relative;align-items:center;margin-bottom:16px;border-radius:4px}.StylePicker .PanelSection .collapsible-menu .menu-title{padding-top:6px;padding-bottom:6px;font-weight:700;font-size:16px}.StylePicker .PanelSection .collapsible-menu .icon-container{position:absolute;right:0;display:flex;align-items:center;justify-content:center;text-align:center;min-width:28px;min-height:28px;border-radius:4px}.StylePicker .PanelSection .collapsible-menu .icon-container .Icon{height:18px;width:18px;color:var(--icon-color)}.StylePicker .PanelSection .collapsible-menu .icon-container:hover{border:1px solid var(--blue-6);background:var(--gray-2)}.StylePicker .PanelSection .collapsible-menu.focus-visible,.StylePicker .PanelSection .collapsible-menu:focus-visible{outline:var(--focus-visible-outline)}.StylePicker .PanelSection .divider{background-color:var(--divider);width:100%;height:1px}.StylePicker .PanelSection .menu-items{margin-bottom:16px}.StylePicker .PanelSection .menu-items:only-child{margin-bottom:0}.StylePicker .PanelSection .menu-items .ColorPalette{margin-bottom:8px}.StylePicker .PanelSection .slider{margin-bottom:16px}.StylePicker .PanelSection .slider:last-child,.StylePicker .PanelSection:empty,.StylePicker .PanelSection:last-child{margin-bottom:0}.StylePicker .spacer{width:100%}.StylePicker .Dropdown,.StylePicker .FontSizeDropdown,.StylePicker .overlay-text-input{height:32px}.StylePicker .overlay-text-input:focus{border-color:var(--blue-5)}.StylePicker .lineStyleContainer{margin-bottom:0!important}.StylePicker .lineStyleContainer .StylePicker-LineStyle{display:flex;flex-direction:row;grid-column-gap:8px;-moz-column-gap:8px;column-gap:8px;justify-content:space-between}.StylePicker .lineStyleContainer .StylePicker-LineStyle button.Dropdown{width:100%!important}.StylePicker .lineStyleContainer .StylePicker-LineStyle .Dropdown__items,.StylePicker .lineStyleContainer .StylePicker-LineStyle .Dropdown__wrapper{width:100%}.StylePicker .lineStyleContainer .StylePicker-LineStyle .linestyle-image svg{width:35px;margin-top:11px}.StylePicker .lineStyleContainer .StylePicker-LineStyle .linestyle-image.shift-alignment svg{margin-top:8px}.StylePicker .lineStyleContainer .StylePicker-LineStyle .Dropdown__items .linestyle-image svg{width:45px}.StylePicker .lineStyleContainer .StylePicker-LineStyle [data-element=middleLineStyleDropdown] .linestyle-image.shift-alignment{padding-top:0}.StylePicker .lineStyleContainer .StylePicker-LineStyle [data-element=middleLineStyleDropdown] .linestyle-image.shift-alignment svg{margin-top:11px}.StylePicker .lineStyleContainer .StylePicker-LineStyle [data-element=middleLineStyleDropdown] .Dropdown__items{top:-197px}.StylePicker .lineStyleContainer .StylePicker-LineStyle .StyleOptions{max-width:80px}.StylePicker .lineStyleContainer .StylePicker-LineStyle>*{flex-grow:1;flex-basis:0}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePicker{padding:0 16px 16px;overflow:auto}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePicker{padding:0 16px 16px;overflow:auto}}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./StylePanel.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.StylePanel{display:flex;flex-direction:column;background-color:var(--panel-background);padding-bottom:75px}.StylePanel .style-panel-header{font-size:16px;font-weight:700;margin-bottom:16px}.StylePanel .label{padding-top:16px;font-size:14px;font-weight:700}.StylePanel .no-tool-selected{padding-top:36px;display:flex;flex-direction:column;align-items:center;flex:1 1 auto}.StylePanel .no-tool-selected .msg{padding-top:24px;font-size:13px;text-align:center}@media(min-width:641px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePanel .no-tool-selected .msg{line-height:15px;width:146px}}@container (min-width: 641px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePanel .no-tool-selected .msg{line-height:15px;width:146px}}.StylePanel .no-tool-selected .empty-icon,.StylePanel .no-tool-selected .empty-icon svg{width:55px;height:56px}.StylePanel .no-tool-selected .empty-icon *{fill:var(--gray-6);color:var(--gray-6)}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePanel{width:100%;height:100%;padding-bottom:16px}.App:not(.is-in-desktop-only-mode):not(.is-web-component) .StylePanel .style-panel-header{margin:0 16px 16px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .StylePanel{width:100%;height:100%;padding-bottom:16px}.App.is-web-component:not(.is-in-desktop-only-mode) .StylePanel .style-panel-header{margin:0 16px 16px}}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","import SnapModeToggle from './SnapModeToggle';\n\nexport default SnapModeToggle;","import React from 'react';\nimport { workerTypes } from 'constants/types';\nimport core from 'core';\nimport i18next from 'i18next';\nimport Choice from 'components/Choice/Choice';\nimport getMeasurementTools from 'helpers/getMeasurementTools';\nimport actions from 'actions';\nimport { useDispatch } from 'react-redux';\n\nconst SnapModeToggle = ({\n  Scale,\n  Precision,\n  isSnapModeEnabled,\n}) => {\n  const dispatch = useDispatch();\n\n  const wasDocumentSwappedToClientSide =\n    core.getDocument()?.getType() === workerTypes.WEBVIEWER_SERVER && core.getDocument().isWebViewerServerDocument();\n  const isEligibleDocumentForSnapping = core.getDocument()?.getType().toLowerCase() === workerTypes.PDF || wasDocumentSwappedToClientSide;\n  const showMeasurementSnappingOption = Scale && Precision && isEligibleDocumentForSnapping && core.isFullPDFEnabled();\n\n  const onSnappingChange = (event) => {\n    if (!core.isFullPDFEnabled()) {\n      return;\n    }\n\n    const enableSnapping = event.target.checked;\n    const mode = enableSnapping\n      ? core.getDocumentViewer().SnapMode.e_DefaultSnapMode | core.getDocumentViewer().SnapMode.POINT_ON_LINE\n      : null;\n    const measurementTools = getMeasurementTools();\n\n    measurementTools.forEach((tool) => {\n      tool.setSnapMode?.(mode);\n    });\n\n    dispatch(actions.setEnableSnapMode(enableSnapping));\n  };\n\n  return (\n    <>\n      {showMeasurementSnappingOption && (\n        <div className=\"snapping-option\">\n          <Choice\n            dataElement=\"measurementSnappingOption\"\n            id=\"measurement-snapping\"\n            type=\"checkbox\"\n            label={i18next.t('option.shared.enableSnapping')}\n            checked={isSnapModeEnabled}\n            onChange={onSnappingChange}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default SnapModeToggle;","import core from 'core';\n\nconst Tools = window.Core.Tools;\n\nexport const shouldHideStylePanelOptions = (toolName) => {\n  const toolsNoStylePanelOptions = [\n    Tools.CheckBoxFormFieldCreateTool,\n    Tools.RadioButtonFormFieldCreateTool,\n    Tools.AddParagraphTool,\n    Tools.AddImageContentTool,\n    Tools.CropCreateTool,\n    Tools.SnippingCreateTool,\n    Tools.SignatureFormFieldCreateTool,\n  ];\n\n  return toolsNoStylePanelOptions.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const hasFillColorAndCollapsablePanelSections = (toolName) => {\n  const toolsWithCollapsedStylePanels = [\n    Tools.RectangleCreateTool,\n    Tools.EllipseCreateTool,\n    Tools.PolygonCreateTool,\n    Tools.PolygonCloudCreateTool,\n    Tools.EllipseMeasurementCreateTool,\n    Tools.AreaMeasurementCreateTool,\n    Tools.FreeTextCreateTool,\n    Tools.CalloutCreateTool,\n    Tools.RedactionCreateTool,\n  ];\n\n  return toolsWithCollapsedStylePanels.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const shouldHideFillColorAndCollapsablePanelSections = (toolName) => {\n  const toolsWithHiddenFillColorSections = [\n    Tools.SignatureFormFieldCreateTool,\n    Tools.RubberStampCreateTool,\n    Tools.StampCreateTool,\n    Tools.EraserTool,\n  ];\n  return toolsWithHiddenFillColorSections.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const shouldHideStrokeSlider = (toolName) => {\n  const toolsWithHiddenStrokeSlider = [\n    Tools.TextUnderlineCreateTool,\n    Tools.TextHighlightCreateTool,\n    Tools.TextSquigglyCreateTool,\n    Tools.TextStrikeoutCreateTool,\n    Tools.CountMeasurementCreateTool,\n    Tools.RubberStampCreateTool,\n    Tools.FileAttachmentCreateTool,\n    Tools.StampCreateTool,\n    Tools.StickyCreateTool,\n    Tools.MarkInsertTextCreateTool,\n    Tools.MarkReplaceTextCreateTool,\n  ];\n  return toolsWithHiddenStrokeSlider.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const shouldHideStrokeStyle = (toolName) => {\n  const toolsWithHiddenStrokeStyle = [\n    Tools.RubberStampCreateTool,\n    Tools.StampCreateTool,\n    Tools.EraserTool,\n  ];\n  return toolsWithHiddenStrokeStyle.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const shouldShowTextStyle = (toolName) => {\n  const toolsWithHiddenStrokeSlider = [\n    Tools.FreeTextCreateTool,\n    Tools.CalloutCreateTool,\n    Tools.RedactionCreateTool,\n    Tools.TextFormFieldCreateTool,\n    Tools.ListBoxFormFieldCreateTool,\n    Tools.ComboBoxFormFieldCreateTool,\n  ];\n  return toolsWithHiddenStrokeSlider.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const shouldHideOpacitySlider = (toolName) => {\n  const toolsWithHiddenOpacitySlider = [\n    Tools.RedactionCreateTool,\n    Tools.EraserTool,\n    Tools.TextFormFieldCreateTool,\n    Tools.ListBoxFormFieldCreateTool,\n    Tools.ComboBoxFormFieldCreateTool,\n    Tools.SignatureFormFieldCreateTool,\n  ];\n  return toolsWithHiddenOpacitySlider.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const hasSnapModeCheckbox = (toolName) => {\n  const toolsWithSnapModeCheckbox = [\n    Tools.DistanceMeasurementCreateTool,\n    Tools.ArcMeasurementCreateTool,\n    Tools.PerimeterMeasurementCreateTool,\n    Tools.AreaMeasurementCreateTool,\n    Tools.RectangularAreaMeasurementCreateTool,\n    Tools.CloudyRectangularAreaMeasurementCreateTool,\n  ];\n  return toolsWithSnapModeCheckbox.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const extractUniqueFontFamilies = (jsonData, inputText) => {\n  const uniqueFontFamilies = new Set();\n  const uniqueFontSizes = new Set();\n\n  for (const key in jsonData) {\n    if (jsonData.hasOwnProperty(key)) {\n      const index = parseInt(key, 10);\n      if (!isNaN(index) && inputText[index] !== ' ' && jsonData[key]['font-family']) {\n        uniqueFontFamilies.add(jsonData[key]['font-family'].trim());\n      }\n      if (!isNaN(index) && inputText[index] !== ' ' && jsonData[key]['font-size']) {\n        uniqueFontSizes.add(jsonData[key]['font-size'].trim());\n      }\n    }\n  }\n\n  return {\n    fonts: Array.from(uniqueFontFamilies),\n    sizes: Array.from(uniqueFontSizes),\n  };\n};\n\nexport const shouldHideTransparentFillColor = (toolName) => {\n  const toolsWithHiddenTransparentColor = [Tools.RedactionCreateTool];\n  return toolsWithHiddenTransparentColor.some((tool) => core.getTool(toolName) instanceof tool);\n};\n\nexport const stylePanelSectionTitles = (toolName, section) => {\n  const toolTitles = {\n    'AnnotationCreateRedaction': {\n      'Title': 'component.redaction',\n      'StrokeColor': 'stylePanel.headings.redactionMarkOutline',\n      'FillColor': 'stylePanel.headings.redactionFill',\n    },\n  };\n  return toolTitles[toolName] && toolTitles[toolName][section];\n};\n\nexport const shouldHideTextStylePicker = (toolName) => {\n  const { ToolNames } = window.Core.Tools;\n  const toolsWithHiddenTextStylePicker = [\n    ToolNames.TEXT_FORM_FIELD,\n    ToolNames.LIST_BOX_FIELD,\n    ToolNames.COMBO_BOX_FIELD,\n  ];\n  return toolsWithHiddenTextStylePicker.includes(toolName);\n};\n","import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './StylePicker.scss';\nimport ColorPicker from './ColorPicker';\nimport Slider from 'components/Slider';\nimport DataElements from 'constants/dataElement';\nimport { circleRadius } from 'constants/slider';\nimport Dropdown from '../Dropdown';\nimport {\n  defaultStartLineStyles,\n  defaultStrokeStyles,\n  defaultEndLineStyles,\n  cloudyStrokeStyle\n} from 'constants/strokeStyleIcons';\nimport Icon from 'components/Icon';\nimport SnapModeToggle from './SnapModeToggle';\nimport selectors from 'selectors';\nimport actions from 'actions';\nimport {\n  hasFillColorAndCollapsablePanelSections,\n  stylePanelSectionTitles,\n  shouldHideStrokeSlider,\n  shouldHideOpacitySlider,\n  hasSnapModeCheckbox,\n  shouldShowTextStyle,\n  shouldHideTransparentFillColor,\n  shouldHideStrokeStyle,\n  shouldHideFillColorAndCollapsablePanelSections,\n} from 'helpers/stylePanelHelper';\nimport useOnFreeTextEdit from 'hooks/useOnFreeTextEdit';\nimport RichTextStyleEditor from '../RichTextStyleEditor';\nimport LabelTextEditor from 'components/LabelTextEditor';\n\nconst withCloudyStyle = defaultStrokeStyles.concat(cloudyStrokeStyle);\n\nconst propTypes = {\n  onStyleChange: PropTypes.func.isRequired,\n  style: PropTypes.object.isRequired,\n  sliderProperties: PropTypes.arrayOf(PropTypes.string),\n  isFreeText: PropTypes.bool,\n  isEllipse: PropTypes.bool,\n  isRedaction: PropTypes.bool,\n  isTextStylePickerHidden: PropTypes.bool,\n  redactionLabelProperties: PropTypes.object,\n  isFreeHand: PropTypes.bool,\n  showLineStyleOptions: PropTypes.bool,\n  isArc: PropTypes.bool,\n  isStamp: PropTypes.bool,\n  isInFormFieldCreationMode: PropTypes.bool,\n  startLineStyle: PropTypes.string,\n  endLineStyle: PropTypes.string,\n  strokeStyle: PropTypes.string,\n  onLineStyleChange: PropTypes.func,\n  toolName: PropTypes.string,\n  onFreeTextSizeToggle: PropTypes.func,\n  isFreeTextAutoSize: PropTypes.bool,\n  handleRichTextStyleChange: PropTypes.func,\n  activeType: PropTypes.string,\n};\n\nconst MAX_STROKE_THICKNESS = 20;\n\nconst StylePicker = ({\n  onStyleChange,\n  style,\n  isFreeText,\n  isEllipse,\n  isRedaction,\n  isTextStylePickerHidden,\n  isFreeHand,\n  showLineStyleOptions,\n  isArc,\n  isStamp,\n  isInFormFieldCreationMode,\n  startLineStyle,\n  endLineStyle,\n  strokeStyle,\n  onLineStyleChange,\n  onFreeTextSizeToggle,\n  isFreeTextAutoSize,\n  handleRichTextStyleChange,\n  activeTool,\n  saveEditorInstance,\n}) => {\n  const [t] = useTranslation();\n  const dispatch = useDispatch();\n  const [isRichTextEditMode, setIsRichTextEditMode] = useState(false);\n  const [strokeColor, setStrokeColor] = useState(style.StrokeColor);\n  const [startingLineStyle, setStartingLineStyle] = useState(startLineStyle);\n  const [endingLineStyle, setEndingLineStyle] = useState(endLineStyle);\n  const [strokeLineStyle, setStrokeLineStyle] = useState(strokeStyle);\n  const [fillColor, setFillColor] = useState(style.FillColor);\n\n  const hideStrokeStyle = shouldHideStrokeStyle(activeTool);\n  const showFillColorAndCollapsablePanelSections = hasFillColorAndCollapsablePanelSections(activeTool);\n  const hideFillColorAndCollapsablePanelSections = shouldHideFillColorAndCollapsablePanelSections(activeTool);\n  const hideStrokeSlider = shouldHideStrokeSlider(activeTool);\n  const showSnapModeCheckbox = hasSnapModeCheckbox(activeTool);\n  const showTextStyle = shouldShowTextStyle(activeTool);\n\n  useEffect(() => {\n    if (showFillColorAndCollapsablePanelSections) {\n      if (showTextStyle) {\n        dispatch(actions.openElement(DataElements.RICH_TEXT_STYLE_CONTAINER));\n      } else {\n        dispatch(actions.openElement(DataElements.STROKE_STYLE_CONTAINER));\n      }\n    }\n  }, [activeTool]);\n\n  useEffect(() => {\n    if (isRichTextEditMode) {\n      dispatch(actions.closeElement(DataElements.ANNOTATION_POPUP));\n    }\n  }, [isRichTextEditMode]);\n\n  useEffect(() => {\n    setStrokeColor(style.StrokeColor);\n    setFillColor(style.FillColor);\n  }, [strokeColor, fillColor, style]);\n\n  useEffect(() => {\n    setStrokeColor(style.StrokeColor);\n    setStartingLineStyle(startLineStyle);\n    setStrokeLineStyle(strokeStyle);\n    setEndingLineStyle(endLineStyle);\n  }, [startLineStyle, endLineStyle, strokeStyle]);\n\n  const onStrokeColorChange = (color) => {\n    onStyleChange?.('StrokeColor', color);\n    setStrokeColor(color);\n  };\n\n  const onStartLineStyleChange = (style) => {\n    onLineStyleChange?.('start', style);\n    setStartingLineStyle(style);\n  };\n\n  const onStrokeStyleChange = (style, value) => {\n    if (value) {\n      onLineStyleChange?.(style, value);\n      setStrokeLineStyle(value);\n    } else {\n      onLineStyleChange?.('middle', style);\n      setStrokeLineStyle(style);\n    }\n  };\n\n  const onEndLineStyleChange = (style) => {\n    onLineStyleChange?.('end', style);\n    setEndingLineStyle(style);\n  };\n\n  const onFillColorChange = (color) => {\n    onStyleChange?.('FillColor', color);\n    setFillColor(color);\n  };\n\n  const onSliderChange = (property, value) => {\n    onStyleChange?.(property, value);\n  };\n\n  // We do not have sliders to show up for redaction annots\n  if (isRedaction) {\n    style.Opacity = null;\n    style.StrokeThickness = null;\n  }\n\n  const [\n    isSnapModeEnabled,\n    isStyleOptionDisabled,\n    isStrokeStyleContainerActive,\n    isFillColorContainerActive,\n    isOpacityContainerActive,\n    isTextStyleContainerActive,\n  ] = useSelector((state) => [\n    selectors.isSnapModeEnabled(state),\n    selectors.isElementDisabled(state, DataElements.STYLE_OPTION),\n    selectors.isElementOpen(state, DataElements.STROKE_STYLE_CONTAINER),\n    selectors.isElementOpen(state, DataElements.FILL_COLOR_CONTAINER),\n    selectors.isElementOpen(state, DataElements.OPACITY_CONTAINER),\n    selectors.isElementOpen(state, DataElements.RICH_TEXT_STYLE_CONTAINER),\n  ]);\n\n  const panelItems = {\n    [DataElements.STROKE_STYLE_CONTAINER]: isStrokeStyleContainerActive,\n    [DataElements.FILL_COLOR_CONTAINER]: isFillColorContainerActive,\n    [DataElements.OPACITY_CONTAINER]: isOpacityContainerActive,\n    [DataElements.RICH_TEXT_STYLE_CONTAINER]: isTextStyleContainerActive,\n  };\n\n  const togglePanelItem = (dataElement) => {\n    if (!panelItems[dataElement]) {\n      dispatch(actions.openElement(dataElement));\n    } else {\n      dispatch(actions.closeElement(dataElement));\n    }\n  };\n  const openTextStyleContainer = () => {\n    dispatch(actions.openElements(DataElements.RICH_TEXT_EDITOR));\n    togglePanelItem(DataElements.RICH_TEXT_STYLE_CONTAINER);\n  };\n  const openStrokeStyleContainer = () => togglePanelItem(DataElements.STROKE_STYLE_CONTAINER);\n  const openFillColorContainer = () => togglePanelItem(DataElements.FILL_COLOR_CONTAINER);\n  const openOpacityContainer = () => togglePanelItem(DataElements.OPACITY_CONTAINER);\n\n  const getSliderProps = (type) => {\n    const { Opacity, StrokeThickness, FontSize } = style;\n\n    const lineStart = circleRadius;\n    switch (type.toLowerCase()) {\n      case 'opacity':\n        if (Opacity === null) {\n          return null;\n        }\n        return {\n          property: 'Opacity',\n          displayProperty: 'opacity',\n          value: Opacity,\n          getDisplayValue: (Opacity) => `${Math.round(Opacity * 100)}%`,\n          dataElement: DataElements.OPACITY_SLIDER,\n          getCirclePosition: (lineLength, Opacity) => Opacity * lineLength + lineStart,\n          convertRelativeCirclePositionToValue: (circlePosition) => circlePosition,\n          withInputField: true,\n          inputFieldType: 'number',\n          min: 0,\n          max: 100,\n          step: 1,\n          getLocalValue: (opacity) => parseInt(opacity) / 100,\n        };\n      case 'strokethickness':\n        if (StrokeThickness === null) {\n          return null;\n        }\n        return {\n          property: 'StrokeThickness',\n          displayProperty: 'thickness',\n          value: StrokeThickness,\n          getDisplayValue: (strokeThickness) => {\n            const placeOfDecimal =\n              Math.floor(strokeThickness) !== strokeThickness\n                ? strokeThickness?.toString().split('.')[1].length || 0\n                : 0;\n            if (StrokeThickness === 0 || (StrokeThickness >= 1 && (placeOfDecimal > 2 || placeOfDecimal === 0))) {\n              return `${Math.round(strokeThickness)}pt`;\n            }\n            return `${parseFloat(strokeThickness).toFixed(2)}pt`;\n          },\n          dataElement: DataElements.STROKE_THICKNESS_SLIDER,\n          getCirclePosition: (lineLength, strokeThickness) => (strokeThickness / MAX_STROKE_THICKNESS) * lineLength + lineStart,\n          convertRelativeCirclePositionToValue: (circlePosition) => {\n            if (circlePosition >= 1 / MAX_STROKE_THICKNESS) {\n              return Math.round(circlePosition * MAX_STROKE_THICKNESS);\n            }\n            if (circlePosition >= 0.75 / MAX_STROKE_THICKNESS && circlePosition < 1 / MAX_STROKE_THICKNESS) {\n              return 0.75;\n            }\n            if (circlePosition >= 0.5 / MAX_STROKE_THICKNESS && circlePosition < 0.75 / MAX_STROKE_THICKNESS) {\n              return 0.5;\n            }\n            if (circlePosition >= 0.25 / MAX_STROKE_THICKNESS && circlePosition < 0.5 / MAX_STROKE_THICKNESS) {\n              return 0.25;\n            }\n            if (circlePosition >= 0.08 / MAX_STROKE_THICKNESS && circlePosition < 0.25 / MAX_STROKE_THICKNESS) {\n              return 0.1;\n            }\n            return isFreeText ? 0 : 0.1;\n          },\n          withInputField: true,\n          inputFieldType: 'number',\n          min: isFreeText ? 0 : 0.1,\n          max: MAX_STROKE_THICKNESS,\n          step: 1,\n          getLocalValue: (strokeThickness) => parseFloat(strokeThickness).toFixed(2),\n        };\n      case 'fontsize':\n        if (FontSize === null) {\n          return null;\n        }\n        return {\n          property: 'FontSize',\n          displayProperty: 'text',\n          value: FontSize,\n          getDisplayValue: (FontSize) => `${Math.round(parseInt(FontSize, 10))}pt`,\n          dataElement: DataElements.FONT_SIZE_SLIDER,\n          getCirclePosition: (lineLength, FontSize) => ((parseInt(FontSize, 10) - 5) / 40) * lineLength + lineStart,\n          convertRelativeCirclePositionToValue: (circlePosition) => `${circlePosition * 40 + 5}pt`,\n          min: 5,\n          max: 45,\n          step: 1,\n          withInputField: true,\n          inputFieldType: 'number',\n          getLocalValue: (FontSize) => `${parseFloat(FontSize).toFixed(2)}pt`,\n        };\n    }\n  };\n\n  const renderSlider = (property, shouldHideSliderTitle) => {\n    const sliderProps = getSliderProps(property);\n    if (!sliderProps) {\n      return null;\n    }\n    return (\n      <Slider\n        key={property}\n        {...sliderProps}\n        onStyleChange={onSliderChange}\n        onSliderChange={onSliderChange}\n        shouldHideSliderTitle={shouldHideSliderTitle}\n        customCircleRadius={8}\n        customLineStrokeWidth={5}\n      />\n    );\n  };\n\n  const renderDivider = () => {\n    if (showFillColorAndCollapsablePanelSections) {\n      return <div className=\"divider\" />;\n    }\n  };\n\n  const onOpenProps = useOnFreeTextEdit(saveEditorInstance);\n  const textSizeSlider = (isTextStylePickerHidden) ? <div className=\"StyleOption text-size-slider\">{renderSlider('fontsize')}</div> : null;\n  const strokethicknessComponent = renderSlider('strokethickness');\n\n  return (\n    <div\n      className=\"StylePicker\"\n      onMouseDown={(e) => {\n        if (e.type !== 'touchstart' && e.target.tagName.toUpperCase() !== 'INPUT') {\n          e.preventDefault();\n        }\n      }}\n    >\n      {showTextStyle && (\n        <div className=\"PanelSection TextStyle\">\n          <div\n            className=\"collapsible-menu\"\n            onClick={openTextStyleContainer}\n            tabIndex={0}\n            onKeyDown={(e) => e.key === 'Enter' && openTextStyleContainer()}\n            role={'toolbar'}\n          >\n            <label className=\"menu-title\">{t(stylePanelSectionTitles(activeTool, 'OverlayText') || 'option.stylePopup.textStyle')}</label>\n            <div className=\"icon-container\">\n              <Icon glyph={`icon-chevron-${isTextStyleContainerActive ? 'up' : 'down'}`} />\n            </div>\n          </div>\n          {isTextStyleContainerActive && isRedaction && (\n            <div className=\"PanelSubsection RedactionTextLabel\">\n              <div className=\"menu-subtitle\">{t('stylePanel.headings.redactionTextLabel')}</div>\n              <LabelTextEditor properties={style} onPropertyChange={onStyleChange} placeholderText={' '} />\n            </div>\n          )}\n          {isTextStyleContainerActive && (\n            <RichTextStyleEditor\n              style={style}\n              {...onOpenProps}\n              property={'TextColor'}\n              colorMapKey={'freeText'}\n              isFreeTextAutoSize={isFreeTextAutoSize}\n              onFreeTextSizeToggle={onFreeTextSizeToggle}\n              onPropertyChange={onStyleChange}\n              onRichTextStyleChange={handleRichTextStyleChange}\n              isRichTextEditMode={isRichTextEditMode}\n              setIsRichTextEditMode={setIsRichTextEditMode}\n              isRedaction={isRedaction}\n              activeTool={activeTool}\n              isTextStylePickerHidden={isTextStylePickerHidden}\n              textSizeSliderComponent={textSizeSlider}\n            />\n          )}\n          {renderDivider()}\n        </div>\n      )}\n\n      {!hideStrokeStyle && (\n        <div className=\"PanelSection\">\n          {showFillColorAndCollapsablePanelSections && (\n            <div\n              className=\"collapsible-menu StrokeColorPicker\"\n              onClick={openStrokeStyleContainer}\n              tabIndex={0}\n              onKeyDown={(e) => e.key === 'Enter' && openStrokeStyleContainer()}\n              role={'toolbar'}\n            >\n              <div className=\"menu-title\">\n                {t(stylePanelSectionTitles(activeTool, 'StrokeColor') || 'option.annotationColor.StrokeColor')}\n              </div>\n              <div className=\"icon-container\">\n                <Icon glyph={`icon-chevron-${isStrokeStyleContainerActive ? 'up' : 'down'}`} />\n              </div>\n            </div>\n          )}\n          {(isStrokeStyleContainerActive || !showFillColorAndCollapsablePanelSections) && !isStamp && (\n            <>\n              <div className=\"menu-items\">\n                <ColorPicker onColorChange={onStrokeColorChange} onStyleChange={onStyleChange} color={strokeColor}\n                  activeTool={activeTool} type={'Stroke'}/>\n              </div>\n              {!hideStrokeSlider && strokethicknessComponent && (strokethicknessComponent)}\n              {/*\n                When showLineStyleOptions is true, we want to show the opacity slider together with the stroke slider\n              */}\n              {showLineStyleOptions && <div className=\"StyleOption\">{renderSlider('opacity')}</div>}\n              {!!strokeStyle && !(isInFormFieldCreationMode && !isFreeText) && !isFreeHand && !isArc && (\n                <div className=\"StyleOption\">\n                  <div className=\"styles-container lineStyleContainer\">\n                    <div className=\"styles-title\">Style</div>\n                    <div className=\"StylePicker-LineStyle\">\n                      {showLineStyleOptions && (\n                        <Dropdown\n                          className=\"StylePicker-StartLineStyleDropdown\"\n                          dataElement=\"startLineStyleDropdown\"\n                          images={defaultStartLineStyles}\n                          onClickItem={onStartLineStyleChange}\n                          currentSelectionKey={startingLineStyle}\n                        />\n                      )}\n                      {!isStyleOptionDisabled && (\n                        <Dropdown\n                          className={`StylePicker-StrokeLineStyleDropdown${\n                            !!strokeStyle && !showLineStyleOptions ? ' StyleOptions' : ''\n                          }`}\n                          dataElement=\"middleLineStyleDropdown\"\n                          images={isEllipse || showLineStyleOptions ? defaultStrokeStyles : withCloudyStyle}\n                          onClickItem={onStrokeStyleChange}\n                          currentSelectionKey={strokeLineStyle}\n                        />\n                      )}\n                      {showLineStyleOptions && (\n                        <Dropdown\n                          className=\"StylePicker-EndLineStyleDropdown\"\n                          dataElement=\"endLineStyleDropdown\"\n                          images={defaultEndLineStyles}\n                          onClickItem={onEndLineStyleChange}\n                          currentSelectionKey={endingLineStyle}\n                        />\n                      )}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </>\n          )}\n          {renderDivider()}\n        </div>\n      )}\n      {hideStrokeStyle && !hideStrokeSlider && strokethicknessComponent && (strokethicknessComponent)}\n      {showFillColorAndCollapsablePanelSections && !hideFillColorAndCollapsablePanelSections && (\n        <div className=\"PanelSection\">\n          <div\n            className=\"collapsible-menu FillColorPicker\"\n            onClick={openFillColorContainer}\n            tabIndex={0}\n            onKeyDown={(e) => e.key === 'Enter' && openFillColorContainer()}\n            role={'toolbar'}\n          >\n            <div className=\"menu-title\">\n              {t(stylePanelSectionTitles(activeTool, 'FillColor') || 'option.annotationColor.FillColor')}\n            </div>\n            <div className=\"icon-container\">\n              <Icon glyph={`icon-chevron-${isFillColorContainerActive ? 'up' : 'down'}`} />\n            </div>\n          </div>\n          {isFillColorContainerActive && (\n            <div className=\"menu-items\">\n              <ColorPicker\n                onColorChange={onFillColorChange}\n                onStyleChange={onStyleChange}\n                color={fillColor}\n                hasTransparentColor={!shouldHideTransparentFillColor(activeTool)}\n                activeTool={activeTool}\n                type={'Fill'}\n              />\n            </div>\n          )}\n          {!shouldHideOpacitySlider(activeTool) && renderDivider()}\n        </div>\n      )}\n\n      <div className=\"PanelSection\">\n        {showFillColorAndCollapsablePanelSections && !shouldHideOpacitySlider(activeTool) && (\n          <div\n            className=\"collapsible-menu StrokeColorPicker\"\n            onClick={openOpacityContainer}\n            tabIndex={0}\n            onKeyDown={(e) => e.key === 'Enter' && openOpacityContainer()}\n            role={'toolbar'}\n          >\n            <div className=\"menu-title\">{t('option.slider.opacity')}</div>\n            <div className=\"icon-container\">\n              <Icon glyph={`icon-chevron-${isOpacityContainerActive ? 'up' : 'down'}`} />\n            </div>\n          </div>\n        )}\n        {/*\n          If showLineStyleOptions is true, then we don't want to show the opacity slider\n          in the bottom because it is already shown before together with the stroke slider\n        */}\n        {!showLineStyleOptions && !shouldHideOpacitySlider(activeTool) && (isOpacityContainerActive || !showFillColorAndCollapsablePanelSections) && (\n          <div className=\"StyleOption\">{renderSlider('opacity', showFillColorAndCollapsablePanelSections)}</div>\n        )}\n        {showSnapModeCheckbox && renderDivider()}\n      </div>\n      {showSnapModeCheckbox && (\n        <>\n          {/* to avoid inline styling when there's no divider */}\n          {!showFillColorAndCollapsablePanelSections && <div className=\"spacer\" />}\n          <div className=\"PanelSection\">\n            <SnapModeToggle Scale={style.Scale} Precision={style.Precision} isSnapModeEnabled={isSnapModeEnabled} />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nStylePicker.propTypes = propTypes;\n\nexport default StylePicker;","import StylePicker from './StylePicker';\n\nexport default StylePicker;","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport selectors from 'selectors';\nimport Icon from 'components/Icon';\nimport StylePicker from 'components/StylePicker';\nimport getAnnotationCreateToolNames from 'helpers/getAnnotationCreateToolNames';\nimport { hexToRGBA } from 'helpers/color';\nimport getToolStyles from 'helpers/getToolStyles';\nimport setToolStyles from 'helpers/setToolStyles';\nimport adjustFreeTextBoundingBox from 'helpers/adjustFreeTextBoundingBox';\nimport core from 'core';\nimport { getDataWithKey, mapToolNameToKey } from 'constants/map';\nimport handleFreeTextAutoSizeToggle from 'helpers/handleFreeTextAutoSizeToggle';\nimport getTextDecoration from 'helpers/getTextDecoration';\nimport {\n  shouldHideStylePanelOptions,\n  extractUniqueFontFamilies,\n  stylePanelSectionTitles,\n  shouldHideTextStylePicker\n} from 'helpers/stylePanelHelper';\nimport defaultTool from 'constants/defaultTool';\n\nconst { ToolNames } = window.Core.Tools;\nconst { Annotations } = window.Core;\n\n\nconst StylePanel = () => {\n  const [t] = useTranslation();\n\n  const [\n    isPanelOpen,\n    toolButtonObject,\n    isAnnotationToolStyleSyncingEnabled,\n    activeDocumentViewerKey,\n  ] = useSelector((state) => [\n    selectors.isElementOpen(state, 'stylePanel'),\n    selectors.getToolButtonObjects(state),\n    selectors.isAnnotationToolStyleSyncingEnabled(state),\n    selectors.getActiveDocumentViewerKey(state),\n  ]);\n\n\n  const currentTool = core.getToolMode();\n  const currentToolName = currentTool?.name;\n  const colorProperties = ['StrokeColor', 'FillColor'];\n  const [showStyles, setShowStyles] = useState(false);\n  const [noToolStyle, setNoToolStyle] = useState(shouldHideStylePanelOptions(currentToolName));\n  const [isEllipse, setIsEllipse] = useState(false);\n  const [isFreeText, setIsFreeText] = useState(false);\n  const [isRedaction, setIsRedaction] = useState(currentToolName === ToolNames.REDACTION);\n  const [isTextStylePickerHidden, setIsTextStylePickerHidden] = useState(currentToolName === defaultTool ? false : shouldHideTextStylePicker(currentToolName));\n  const [isFreeHand, setIsFreeHand] = useState(false);\n  const [isArc, setIsArc] = useState(false);\n  const [isStamp, setIsStamp] = useState(false);\n  const [isInFormFieldCreationMode, setIsInFormFieldCreationMode] = useState(false);\n  const [style, setStyle] = useState({});\n  const [startLineStyle, setStartLineStyle] = useState();\n  const [endLineStyle, setEndLineStyle] = useState();\n  const [strokeStyle, setStrokeStyle] = useState();\n  const [panelTitle, setPanelTitle] = useState(t('stylePanel.headings.styles'));\n  const annotationCreateToolNames = getAnnotationCreateToolNames();\n  const [showLineStyleOptions, setShowLineStyleOptions] = useState(currentToolName === defaultTool ? false : getDataWithKey(mapToolNameToKey(currentToolName)).hasLineEndings);\n  const [isAutoSizeFont, setIsAutoSizeFont] = useState(style.isAutoSizeFont);\n  const [activeTool, setActiveTool] = useState(currentToolName || 'Edit');\n  const [editorInstance, setEditorInstance] = useState(null);\n\n\n  useEffect(() => {\n    if (currentTool?.name === 'AnnotationCreateRubberStamp') {\n      core.setToolMode(defaultTool);\n    }\n  }, [currentTool]);\n\n  const getStrokeStyle = (annot) => {\n    const style = annot['Style'];\n    const dashes = annot['Dashes'];\n    if (style !== 'dash') {\n      return style;\n    }\n    return `${style},${dashes}`;\n  };\n\n  const getPanelTitleOnAnnotationSelected = (annot) => {\n    if (annot.isContentEditPlaceholder()) {\n      setPanelTitle(`${t('stylePanel.headings.contentEdit')} ${t('stylePanel.headings.annotation')}`);\n      setNoToolStyle(true);\n      return;\n    }\n    setPanelTitle(`${t(stylePanelSectionTitles(annot.ToolName, 'Title') || toolButtonObject[annot.ToolName].title)} ${t('stylePanel.headings.annotation')}`);\n  };\n\n  const setPanelTitleForSelectedTool = (tool) => {\n    const toolName = tool.name;\n    const title = toolButtonObject[toolName]?.title;\n    setPanelTitle(`${t(stylePanelSectionTitles(toolName, 'Title') || title)} ${t('stylePanel.headings.tool')}`);\n  };\n\n  const updateStylePanelProps = (annot) => {\n    const extraStyles = {};\n\n    if (annot instanceof Annotations.FreeTextAnnotation) {\n      let StrokeStyle = 'solid';\n      try {\n        StrokeStyle = (annot['Style'] === 'dash')\n          ? `${annot['Style']},${annot['Dashes']}`\n          : annot['Style'];\n      } catch (err) {\n        console.error(err);\n      }\n      extraStyles['TextColor'] = annot.TextColor;\n      extraStyles['RichTextStyle'] = annot.getRichTextStyle();\n      extraStyles['Font'] = annot.Font;\n      extraStyles['FontSize'] = annot.FontSize;\n      extraStyles['TextAlign'] = annot.TextAlign;\n      extraStyles['TextVerticalAlign'] = annot.TextVerticalAlign;\n      extraStyles['calculatedFontSize'] = annot.getCalculatedFontSize();\n      extraStyles['StrokeStyle'] = StrokeStyle;\n      extraStyles['isAutoSizeFont'] = annot.isAutoSizeFont();\n      setIsAutoSizeFont(annot.isAutoSizeFont());\n\n      const { fonts, sizes } = extractUniqueFontFamilies(extraStyles['RichTextStyle'], annot.getContents());\n      if (fonts.length >= 2 || (fonts.length === 1 && fonts[0] !== extraStyles['Font'])) {\n        extraStyles['Font'] = undefined;\n      }\n      if (sizes.length >= 2 || (sizes.length === 1 && sizes[0] !== extraStyles['FontSize'])) {\n        extraStyles['FontSize'] = undefined;\n      }\n    }\n\n    if (annot instanceof Annotations.RedactionAnnotation) {\n      extraStyles['OverlayText'] = annot.OverlayText;\n      extraStyles['Font'] = annot.Font;\n      extraStyles['FontSize'] = annot.FontSize;\n      extraStyles['TextAlign'] = annot.TextAlign;\n    }\n\n    if (annot instanceof Annotations.RectangleAnnotation && annot.isFormFieldPlaceholder() && annot.FontSize !== undefined) {\n      extraStyles.FontSize = annot.FontSize;\n    }\n\n    setStyle({\n      ...style,\n      StrokeColor: annot.StrokeColor,\n      StrokeThickness: annot.StrokeThickness,\n      Opacity: annot.Opacity,\n      FillColor: annot.FillColor,\n      ...extraStyles,\n    });\n    setStartLineStyle(annot.getStartStyle ? annot.getStartStyle() : 'None');\n    setEndLineStyle(annot.getEndStyle ? annot.getEndStyle() : 'None');\n    setStrokeStyle(getStrokeStyle(annot));\n  };\n\n  useEffect(() => {\n    const handleToolModeChange = (newTool) => {\n      if (annotationCreateToolNames.includes(newTool?.name)) {\n        if (!panelTitle) {\n          setShowStyles(false);\n        } else {\n          if (shouldHideStylePanelOptions(newTool?.name)) {\n            setNoToolStyle(true);\n            setShowStyles(true);\n            setPanelTitleForSelectedTool(newTool);\n            return;\n          }\n\n          setNoToolStyle(false);\n          setActiveTool(newTool.name);\n          setShowLineStyleOptions(getDataWithKey(mapToolNameToKey(newTool.name)).hasLineEndings);\n          setIsEllipse(newTool.name === ToolNames.ELLIPSE);\n          setIsFreeText(newTool.name === ToolNames.FREETEXT);\n          setIsRedaction(newTool.name === ToolNames.REDACTION);\n\n          setIsTextStylePickerHidden(shouldHideTextStylePicker(newTool.name));\n\n          setIsFreeHand(\n            newTool.name === ToolNames.FREEHAND ||\n            newTool.name === ToolNames.FREEHAND_HIGHLIGHT,\n          );\n          setIsArc(newTool.name === ToolNames.ARC);\n          setIsStamp(newTool.name === ToolNames.STAMP);\n          setIsInFormFieldCreationMode(core.getFormFieldCreationManager().isInFormFieldCreationMode());\n          const toolStyles = getToolStyles(newTool.name);\n\n          if (newTool.name.includes('FreeText') || newTool.name.includes('Callout')) {\n            toolStyles['isAutoSizeFont'] = newTool['defaults']['isAutoSizeFont'];\n            setIsAutoSizeFont(newTool['defaults']['isAutoSizeFont']);\n          }\n\n          setStyle(toolStyles);\n          setStartLineStyle(toolStyles.StartLineStyle);\n          setStrokeStyle(toolStyles.StrokeStyle);\n          setEndLineStyle(toolStyles.EndLineStyle);\n          setShowStyles(true);\n          setPanelTitleForSelectedTool(newTool);\n        }\n      } else {\n        setShowStyles(false);\n      }\n    };\n    const onAnnotationSelected = (annotations, action) => {\n      if (action === 'selected') {\n        setShowStyles(true);\n        if (annotations.length === 1) {\n          getPanelTitleOnAnnotationSelected(annotations[0]);\n          if (shouldHideStylePanelOptions(annotations[0].ToolName)) {\n            setNoToolStyle(true);\n            return;\n          }\n          setNoToolStyle(false);\n          setActiveTool(annotations[0].ToolName);\n          setIsEllipse(annotations[0] instanceof Annotations.EllipseAnnotation);\n          setIsFreeText(annotations[0] instanceof Annotations.FreeTextAnnotation);\n          setIsRedaction(annotations[0] instanceof Annotations.RedactionAnnotation);\n          setIsTextStylePickerHidden(shouldHideTextStylePicker(annotations[0].ToolName));\n          setIsFreeHand(annotations[0] instanceof Annotations.FreeHandAnnotation);\n          setIsArc(annotations[0] instanceof Annotations.ArcAnnotation);\n          setIsStamp(annotations[0] instanceof Annotations.StampAnnotation);\n          setIsInFormFieldCreationMode(core.getFormFieldCreationManager().isInFormFieldCreationMode());\n          setShowLineStyleOptions(getDataWithKey(mapToolNameToKey(annotations[0].ToolName)).hasLineEndings);\n          updateStylePanelProps(annotations[0]);\n        } else {\n          setPanelTitle(`${t('stylePanel.headings.annotations')} (${annotations.length})`);\n          annotations.forEach((annot) => {\n            updateStylePanelProps(annot);\n          });\n        }\n      } else if (action === 'deselected') {\n        const currentTool = core.getToolMode();\n        if (currentTool instanceof window.Core.Tools.AnnotationEditTool) {\n          setShowStyles(false);\n        }\n        handleToolModeChange(currentTool);\n        // reset tool mode to change the tool name in the header\n        core.setToolMode(currentTool.name);\n      }\n    };\n\n    core.addEventListener('annotationSelected', onAnnotationSelected);\n    core.addEventListener('toolModeUpdated', handleToolModeChange);\n    core.addEventListener('annotationChanged', () => {\n      for (const annot of core.getSelectedAnnotations()) {\n        updateStylePanelProps(annot);\n      }\n    });\n    return () => {\n      core.removeEventListener('annotationSelected', onAnnotationSelected);\n      core.removeEventListener('toolModeUpdated', handleToolModeChange);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (isPanelOpen) {\n      const selectedAnnotations = core.getSelectedAnnotations();\n      if (selectedAnnotations.length === 1) {\n        setShowStyles(true);\n        const annot = selectedAnnotations[0];\n        updateStylePanelProps(annot);\n        getPanelTitleOnAnnotationSelected(annot);\n      } else if (selectedAnnotations.length > 1) {\n        setShowStyles(true);\n        setPanelTitle(`${t('stylePanel.headings.annotations')} (${selectedAnnotations.length})`);\n        selectedAnnotations.forEach((annot) => {\n          updateStylePanelProps(annot);\n        });\n      } else {\n        const currentTool = core.getToolMode();\n        if (currentTool && currentTool.name !== defaultTool) {\n          setShowStyles(true);\n          const toolStyles = getToolStyles(currentTool.name);\n          if (toolStyles) {\n            setStyle(toolStyles);\n            setStartLineStyle(toolStyles.StartLineStyle);\n            setEndLineStyle(toolStyles.EndLineStyle);\n            setStrokeStyle(toolStyles.StrokeStyle);\n          }\n          setPanelTitleForSelectedTool(currentTool);\n        }\n      }\n    }\n  }, [isPanelOpen, isAutoSizeFont]);\n\n  const onStyleChange = (property, value) => {\n    const newStyle = { ...style };\n    newStyle[property] = value;\n    setStyle(newStyle);\n    const annotationsToUpdate = core.getSelectedAnnotations();\n\n    // Newly created freetext is not saved in annotationManager yet, so getSelectedAnnotations\n    // will return empty array, but editor has focus and an annotation\n    if (annotationsToUpdate.length === 0 && editorInstance && property === 'FillColor') {\n      const editor = editorInstance[0];\n      if (editor?.hasFocus()) {\n        const annot = editorInstance[1];\n        editor.setStyle({ background: value });\n        annot['FillColor'] = new Annotations.Color(value);\n        return;\n      }\n    }\n\n    if (annotationsToUpdate.length > 0) {\n      annotationsToUpdate.forEach((annot) => {\n        if (colorProperties.includes(property)) {\n          const colorRGB = hexToRGBA(value);\n          const color = new Annotations.Color(colorRGB.r, colorRGB.g, colorRGB.b, colorRGB.a);\n          core.setAnnotationStyles(annot, {\n            [property]: color,\n          }, activeDocumentViewerKey);\n          if (isAnnotationToolStyleSyncingEnabled) {\n            setToolStyles(annot.ToolName, property, color);\n          }\n        } else {\n          core.setAnnotationStyles(annot, {\n            [property]: value,\n          }, activeDocumentViewerKey);\n          if (annot instanceof Annotations.FreeTextAnnotation) {\n            if (property === 'FontSize' || property === 'Font' || property === 'StrokeThickness') {\n              adjustFreeTextBoundingBox(annot);\n            }\n          }\n          if (isAnnotationToolStyleSyncingEnabled) {\n            setToolStyles(annot.ToolName, property, value);\n          }\n        }\n\n        core.getAnnotationManager().redrawAnnotation(annot);\n      });\n    } else {\n      const currentTool = core.getToolMode();\n      if (currentTool) {\n        if (colorProperties.includes(property)) {\n          const colorRGB = hexToRGBA(value);\n          const color = new Annotations.Color(colorRGB.r, colorRGB.g, colorRGB.b, colorRGB.a);\n          setToolStyles(currentTool.name, property, color);\n        } else if (property === 'Opacity') {\n          setToolStyles(currentTool.name, 'Opacity', value);\n        } else if (property === 'StrokeThickness') {\n          setToolStyles(currentTool.name, 'StrokeThickness', value);\n        } else {\n          setToolStyles(currentTool.name, property, value);\n        }\n      }\n    }\n  };\n\n  const onLineStyleChange = (section, value) => {\n    const sectionPropertyMap = {\n      start: 'StartLineStyle',\n      middle: 'StrokeStyle',\n      end: 'EndLineStyle',\n    };\n    if (section === 'start') {\n      setStartLineStyle(value);\n    } else if (section === 'middle') {\n      setStrokeStyle(value);\n    } else if (section === 'end') {\n      setEndLineStyle(value);\n    }\n    const annotationsToUpdate = core.getSelectedAnnotations();\n    if (annotationsToUpdate.length > 0) {\n      annotationsToUpdate.forEach((annot) => {\n        if (section === 'start') {\n          annot.setStartStyle(value);\n        } else if (section === 'middle') {\n          const dashes = value.split(',');\n          const lineStyle = dashes.shift();\n          annot.Style = lineStyle;\n          annot.Dashes = dashes;\n        } else if (section === 'end') {\n          annot.setEndStyle(value);\n        }\n        core.getAnnotationManager().redrawAnnotation(annot);\n        if (isAnnotationToolStyleSyncingEnabled) {\n          setToolStyles(annot.ToolName, sectionPropertyMap[section], value);\n        }\n      });\n    } else {\n      const currentTool = core.getToolMode();\n      if (currentTool) {\n        setToolStyles(currentTool.name, sectionPropertyMap[section], value);\n      }\n    }\n  };\n  const handleAutoSize = () => {\n    const annotationsToUpdate = core.getSelectedAnnotations()[0];\n    if (annotationsToUpdate) {\n      handleFreeTextAutoSizeToggle(annotationsToUpdate, setIsAutoSizeFont, isAutoSizeFont);\n    } else {\n      const currentTool = core.getToolMode();\n      if (currentTool) {\n        setToolStyles(currentTool.name, 'isAutoSizeFont', !style.isAutoSizeFont);\n        setIsAutoSizeFont(!isAutoSizeFont);\n      }\n    }\n  };\n\n  const noToolSelected = (\n    <>\n      <label className='style-panel-header'>\n        {t('stylePanel.headings.styles')}\n      </label>\n      <div className=\"no-tool-selected\">\n        <div>\n          <Icon className=\"empty-icon\" glyph=\"style-panel-no-tool-selected\" />\n        </div>\n        <div className=\"msg\">{t('stylePanel.noToolSelected')}</div>\n      </div>\n    </>\n  );\n\n  const handleRichTextStyleChange = (property, value) => {\n    const originalProperty = property;\n    const originalValue = value;\n    const activeToolRichTextStyle = style['RichTextStyle']?.[0];\n    if (property === 'underline' || property === 'line-through') {\n      value = getTextDecoration({ [property]: value }, activeToolRichTextStyle);\n      property = 'text-decoration';\n    }\n    const richTextStyle = {\n      0: {\n        ...activeToolRichTextStyle,\n        [property]: value,\n      }\n    };\n\n    const annotationsToUpdate = core.getSelectedAnnotations();\n    if (annotationsToUpdate.length > 0) {\n      annotationsToUpdate.forEach((annotation) => {\n        core.updateAnnotationRichTextStyle(annotation, { [originalProperty]: originalValue }, activeDocumentViewerKey);\n      });\n      setStyle({ ...style, 'RichTextStyle': richTextStyle });\n    } else {\n      const currentTool = core.getToolMode();\n      if (currentTool) {\n        if (typeof currentTool.complete === 'function') {\n          currentTool.complete();\n        }\n        setToolStyles(currentTool.name, 'RichTextStyle', richTextStyle);\n      }\n    }\n  };\n\n  return !showStyles ? (\n    noToolSelected\n  ) : (\n    <>\n      <label className=\"style-panel-header\">{panelTitle}</label>\n      {noToolStyle ? (\n        <div className=\"no-tool-selected\">\n          <div>\n            <Icon className=\"empty-icon\" glyph=\"style-panel-no-tool-selected\" />\n          </div>\n          <div className=\"msg\">{t('stylePanel.noToolStyle')}</div>\n        </div>\n      ) : (\n        <StylePicker\n          sliderProperties={['Opacity', 'StrokeThickness']}\n          style={style}\n          onStyleChange={onStyleChange}\n          isFreeText={isFreeText}\n          isEllipse={isEllipse}\n          isRedaction={isRedaction}\n          isTextStylePickerHidden={isTextStylePickerHidden}\n          isFreeHand={isFreeHand}\n          isArc={isArc}\n          isStamp={isStamp}\n          isInFormFieldCreationMode={isInFormFieldCreationMode}\n          showLineStyleOptions={showLineStyleOptions}\n          startLineStyle={startLineStyle}\n          endLineStyle={endLineStyle}\n          strokeStyle={strokeStyle}\n          onLineStyleChange={onLineStyleChange}\n          onFreeTextSizeToggle={handleAutoSize}\n          isFreeTextAutoSize={isAutoSizeFont}\n          handleRichTextStyleChange={handleRichTextStyleChange}\n          activeTool={activeTool}\n          saveEditorInstance={setEditorInstance}\n        />\n      )}\n    </>\n  );\n};\n\nexport default StylePanel;","import React from 'react';\nimport StylePanel from './StylePanel';\nimport DataElementWrapper from '../DataElementWrapper';\nimport './StylePanel.scss';\n\nconst StylePanelContainer = () => {\n  return (\n    <DataElementWrapper dataElement=\"stylePanel\" className=\"Panel StylePanel\">\n      <StylePanel />\n    </DataElementWrapper>\n  );\n};\n\nexport default StylePanelContainer;","import StylePanelContainer from './StylePanelContainer';\n\nexport default StylePanelContainer;"],"sourceRoot":""}