{"version":3,"sources":["webpack:///./src/ui/src/components/BookmarksPanel/BookmarksPanel.scss?f400","webpack:///./src/ui/src/components/BookmarksPanel/BookmarksPanel.scss","webpack:///./src/ui/src/components/Bookmark/Bookmark.js","webpack:///./src/ui/src/components/Bookmark/index.js","webpack:///./src/ui/src/components/BookmarksPanel/BookmarksPanel.js","webpack:///./src/ui/src/components/BookmarksPanel/index.js"],"names":["api","content","__esModule","default","module","i","options","styleTag","window","isApryseWebViewerWebComponent","document","head","appendChild","webComponents","getElementsByTagName","length","findNestedWebComponents","tagName","root","elements","querySelectorAll","forEach","el","push","shadowRoot","clonedStyleTags","webComponent","onload","styleNode","innerHTML","cloneNode","exports","locals","propTypes","text","PropTypes","string","isRequired","label","defaultLabel","pageIndex","number","isAdding","bool","isMultiSelectionMode","setSelected","func","onSave","onRemove","onCancel","panelSelector","Bookmark","t","useTranslation","useState","isEditing","setIsEditing","isDefault","setIsDefault","bookmarkText","setBookmarkText","undefined","clearSingleClick","setClearSingleClick","inputRef","useRef","isRenameButtonDisabled","onSaveBookmark","trim","onCancelBookmark","setCurrentPage","core","useEffect","current","focus","select","flyoutSelector","DataElements","BOOKMARK_FLYOUT","currentFlyout","useSelector","state","selectors","getFlyout","DataElementWrapper","className","classNames","tabIndex","onKeyDown","e","key","onClick","detail","setTimeout","onDoubleClick","clearTimeout","Choice","type","id","stopPropagation","onChange","target","checked","Button","dataElement","img","ToggleElementButton","toggleElement","disabled","MoreOptionsContextMenuFlyout","shouldHideDeleteButton","handleOnClick","val","menuTypes","RENAME","DELETE","name","ref","aria-label","value","isSubmitType","BookmarksPanel","isElementDisabled","BOOKMARK_PANEL","getBookmarks","getCurrentPage","getPageLabels","isBookmarkIconShortcutVisible","getFeatureFlags","shallowEqual","isDisabled","bookmarks","currentPageIndex","pageLabels","featureFlags","isAddingNewBookmark","setAddingNewBookmark","setMultiSelectionMode","selectingBookmarks","setSelectingBookmarks","customizableUI","dispatch","useDispatch","setBookmarkIconShortcutVisibility","pageIndexes","Object","keys","map","parseInt","index","includes","filter","bm","onRemoveBookmarks","title","confirmationWarning","message","onConfirm","actions","removeBookmark","confirmBtnText","showWarningMessage","data-element","BOOKMARK_MULTI_SELECT","BOOKMARK_SHORTCUT_OPTION","isSwitch","newText","addBookmark","editBookmark","toString","find","BOOKMARK_ADD_NEW_BUTTON_CONTAINER","BOOKMARK_ADD_NEW_BUTTON"],"mappings":"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","file":"chunks/53.chunk.js","sourcesContent":["var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./BookmarksPanel.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach(el => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach(el => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function () {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.BookmarksPanel{display:flex;flex-direction:column;flex:1;font-size:var(--font-size-default)}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .BookmarksPanel{margin:16px;padding:0;overflow-y:auto}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .BookmarksPanel{margin:16px;padding:0;overflow-y:auto}}.BookmarksPanel .bookmark-switch{-webkit-font-smoothing:antialiased;margin-top:var(--padding-medium);padding-left:4px}.BookmarksPanel .bookmark-outline-single-container{margin-top:var(--padding-medium)}.BookmarksPanel .bookmark-outline-single-container[focus-within]:not(.editing){background-color:var(--outline-selected);outline:1px solid var(--bookmark-outline-hover-border)}.BookmarksPanel .bookmark-outline-single-container:focus-within:not(.editing){background-color:var(--outline-selected);outline:1px solid var(--bookmark-outline-hover-border)}.BookmarksPanel .msg-no-bookmark-outline{margin-top:var(--padding)}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .BookmarksPanel .ui__choice__label{font-size:13px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .BookmarksPanel .ui__choice__label{font-size:13px}}.BookmarksPanel .ui__choice__input__switch{background-color:var(--gray-6)!important}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .BookmarksPanel .bookmark-outline-row{overflow:auto}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .BookmarksPanel .bookmark-outline-row{overflow:auto}}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .BookmarksPanel .bookmark-outline-cancel-button,.App:not(.is-in-desktop-only-mode):not(.is-web-component) .BookmarksPanel .bookmark-outline-control-button,.App:not(.is-in-desktop-only-mode):not(.is-web-component) .BookmarksPanel .bookmark-outline-save-button{font-size:13px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .BookmarksPanel .bookmark-outline-cancel-button,.App.is-web-component:not(.is-in-desktop-only-mode) .BookmarksPanel .bookmark-outline-control-button,.App.is-web-component:not(.is-in-desktop-only-mode) .BookmarksPanel .bookmark-outline-save-button{font-size:13px}}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .BookmarksPanel .bookmark-outline-input,.App:not(.is-in-desktop-only-mode):not(.is-web-component) .BookmarksPanel .bookmark-text-input{font-size:13px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .BookmarksPanel .bookmark-outline-input,.App.is-web-component:not(.is-in-desktop-only-mode) .BookmarksPanel .bookmark-text-input{font-size:13px}}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","import React, { useEffect, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport selectors from 'selectors';\nimport classNames from 'classnames';\nimport core from 'core';\nimport PropTypes from 'prop-types';\nimport ToggleElementButton from 'components/ModularComponents/ToggleElementButton';\nimport Button from '../Button';\nimport DataElementWrapper from '../DataElementWrapper';\nimport Choice from 'components/Choice';\nimport MoreOptionsContextMenuFlyout, { menuTypes } from '../MoreOptionsContextMenuFlyout/MoreOptionsContextMenuFlyout';\nimport DataElements from 'constants/dataElement';\n\nimport '../../constants/bookmarksOutlinesShared.scss';\n\nconst propTypes = {\n  text: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  defaultLabel: PropTypes.string,\n  pageIndex: PropTypes.number.isRequired,\n  isAdding: PropTypes.bool,\n  isMultiSelectionMode: PropTypes.bool,\n  setSelected: PropTypes.func,\n  onSave: PropTypes.func.isRequired,\n  onRemove: PropTypes.func,\n  onCancel: PropTypes.func,\n  panelSelector: PropTypes.string,\n};\n\nconst Bookmark = ({\n  text,\n  label,\n  defaultLabel,\n  pageIndex,\n  isAdding,\n  isMultiSelectionMode,\n  setSelected,\n  onSave,\n  onRemove,\n  onCancel,\n  panelSelector,\n}) => {\n  const [t] = useTranslation();\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [isDefault, setIsDefault] = useState(false);\n  const [bookmarkText, setBookmarkText] = useState(text);\n  const [clearSingleClick, setClearSingleClick] = useState(undefined);\n  const inputRef = useRef();\n\n  const isRenameButtonDisabled = () => {\n    return !bookmarkText || text === bookmarkText;\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      e.stopPropagation();\n      if (isAdding || (isEditing && !isRenameButtonDisabled())) {\n        onSaveBookmark();\n      }\n    }\n    if (e.key === 'Escape') {\n      onCancelBookmark();\n    }\n  };\n\n  const onSaveBookmark = () => {\n    setIsEditing(false);\n    onSave(bookmarkText.trim() === '' ? t('message.untitled') : bookmarkText);\n  };\n\n  const onCancelBookmark = () => {\n    setIsEditing(false);\n    // on cancel reset local bookmark text\n    isEditing && setBookmarkText(text);\n    isAdding && onCancel();\n  };\n\n  const setCurrentPage = (pageIndex) => {\n    core.setCurrentPage(pageIndex + 1);\n  };\n\n  useEffect(() => {\n    if (bookmarkText !== text) {\n      setBookmarkText(text);\n    }\n  }, [text]);\n\n  useEffect(() => {\n    if (isAdding || isEditing) {\n      inputRef.current.focus();\n      inputRef.current.select();\n    }\n\n    if (!isAdding && !isEditing) {\n      setIsDefault(true);\n    } else {\n      setIsDefault(false);\n    }\n  }, [isEditing]);\n\n  const handleOnClick = (val) => {\n    switch (val) {\n      case menuTypes.RENAME:\n        setIsEditing(true);\n        break;\n      case menuTypes.DELETE:\n        onRemove(pageIndex);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const flyoutSelector = `${DataElements.BOOKMARK_FLYOUT}-${'outlinePath'}`;\n  const currentFlyout = useSelector((state) => selectors.getFlyout(state, flyoutSelector));\n\n  return (\n    <DataElementWrapper\n      className={classNames({\n        'bookmark-outline-single-container': true,\n        'editing': isAdding || isEditing,\n        'default': isDefault,\n      })}\n      tabIndex={0}\n      onKeyDown={(e) => {\n        if (e.key === 'Enter') {\n          setCurrentPage(pageIndex);\n        }\n      }}\n      onClick={(e) => {\n        if (isDefault && e.detail === 1) {\n          setClearSingleClick(setTimeout(() => {\n            setCurrentPage(pageIndex);\n          }, 300));\n        }\n      }}\n      onDoubleClick={() => {\n        if (isDefault) {\n          clearTimeout(clearSingleClick);\n        }\n      }}\n    >\n      {isMultiSelectionMode &&\n        <Choice\n          type=\"checkbox\"\n          className=\"bookmark-outline-checkbox\"\n          id={`bookmark-checkbox-${pageIndex + 1}`}\n          onClick={(e) => e.stopPropagation()}\n          onChange={(e) => setSelected(pageIndex, e.target.checked)}\n        />\n      }\n\n      <div className=\"bookmark-outline-label-row\">\n        <div className=\"bookmark-outline-label\">{(isAdding || isEditing) ? label : defaultLabel}</div>\n\n        {isDefault &&\n          <>\n            {isMultiSelectionMode &&\n              <Button\n                className=\"bookmark-outline-more-button\"\n                dataElement={`bookmark-more-button-${pageIndex}`}\n                img=\"icon-pencil-line\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  setIsEditing(true);\n                }}\n                tabIndex={-1}\n              />\n            }\n            {!isMultiSelectionMode &&\n              <ToggleElementButton\n                className=\"bookmark-outline-more-button\"\n                dataElement={`bookmark-more-button-${panelSelector}-${pageIndex}`}\n                img=\"icon-tool-more\"\n                toggleElement={flyoutSelector}\n                disabled={false}\n              />\n            }\n            <MoreOptionsContextMenuFlyout\n              shouldHideDeleteButton={false}\n              currentFlyout={currentFlyout}\n              flyoutSelector={flyoutSelector}\n              type={'bookmark'}\n              handleOnClick={handleOnClick}\n            />\n            <div\n              className=\"bookmark-outline-text bookmark-text-input\"\n              onDoubleClick={() => setIsEditing(true)}\n            >\n              {text}\n            </div>\n          </>\n        }\n\n        {(isAdding || isEditing) &&\n          <>\n            <input\n              type=\"text\"\n              name=\"bookmark\"\n              ref={inputRef}\n              className=\"bookmark-outline-input bookmark-text-input\"\n              aria-label={t('action.name')}\n              value={bookmarkText}\n              onKeyDown={handleKeyDown}\n              onChange={(e) => setBookmarkText(e.target.value)}\n            />\n\n            <div className=\"bookmark-outline-editing-controls\">\n              <Button\n                className=\"bookmark-outline-cancel-button\"\n                label={t('action.cancel')}\n                onClick={onCancelBookmark}\n              />\n              {isAdding &&\n                <Button\n                  className=\"bookmark-outline-save-button\"\n                  label={t('action.add')}\n                  isSubmitType\n                  onClick={onSaveBookmark}\n                />\n              }\n              {isEditing &&\n                <Button\n                  className=\"bookmark-outline-save-button\"\n                  label={t('action.save')}\n                  isSubmitType\n                  disabled={isRenameButtonDisabled()}\n                  onClick={onSaveBookmark}\n                />\n              }\n            </div>\n          </>\n        }\n      </div>\n    </DataElementWrapper>\n  );\n};\n\nBookmark.propTypes = propTypes;\n\nexport default Bookmark;\n","import Bookmark from './Bookmark';\n\nexport default Bookmark;\n","import React, { useEffect, useState } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nimport Bookmark from 'components/Bookmark';\nimport Button from 'components/Button';\nimport DataElementWrapper from 'components/DataElementWrapper';\nimport DataElements from 'constants/dataElement';\nimport Choice from 'components/Choice';\n\nimport core from 'core';\nimport actions from 'actions';\nimport selectors from 'selectors';\n\nimport '../../constants/bookmarksOutlinesShared.scss';\nimport './BookmarksPanel.scss';\nimport classNames from 'classnames';\n\nconst BookmarksPanel = ({ panelSelector }) => {\n  const [\n    isDisabled,\n    bookmarks,\n    currentPageIndex,\n    pageLabels,\n    isBookmarkIconShortcutVisible,\n    featureFlags,\n  ] = useSelector(\n    (state) => [\n      selectors.isElementDisabled(state, DataElements.BOOKMARK_PANEL),\n      selectors.getBookmarks(state),\n      selectors.getCurrentPage(state) - 1,\n      selectors.getPageLabels(state),\n      selectors.isBookmarkIconShortcutVisible(state),\n      selectors.getFeatureFlags(state),\n    ],\n    shallowEqual,\n  );\n\n  const [isAddingNewBookmark, setAddingNewBookmark] = useState(false);\n  const [isMultiSelectionMode, setMultiSelectionMode] = useState(false);\n  const [selectingBookmarks, setSelectingBookmarks] = useState([]);\n  const customizableUI = featureFlags.customizableUI;\n\n  const [t] = useTranslation();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isBookmarkIconShortcutVisible && !isDisabled) {\n      core.setBookmarkIconShortcutVisibility(true);\n    } else {\n      core.setBookmarkIconShortcutVisibility(false);\n    }\n  }, [isDisabled, isBookmarkIconShortcutVisible]);\n\n  const pageIndexes = Object.keys(bookmarks).map((pageIndex) => parseInt(pageIndex, 10));\n\n  useEffect(() => {\n    // if bookmark is deleted from the shortcut, should also remove from selectingBookmarks\n    selectingBookmarks.forEach((index) => {\n      if (!pageIndexes.includes(index)) {\n        setSelectingBookmarks(selectingBookmarks.filter((bm) => bm !== index));\n      }\n    });\n\n    const shouldResetMultiSelectMode = pageIndexes.length === 0;\n    if (shouldResetMultiSelectMode) {\n      setMultiSelectionMode(false);\n    }\n  }, [bookmarks]);\n\n  const onRemoveBookmarks = (pageIndexes) => {\n    const title = t('warning.deleteBookmark.title');\n    const message = t('warning.deleteBookmark.message');\n    const confirmationWarning = {\n      message,\n      title,\n      onConfirm: () => {\n        pageIndexes.forEach((pageIndex) => dispatch(actions.removeBookmark(pageIndex)));\n        setSelectingBookmarks([]);\n      },\n      confirmBtnText: t('action.delete'),\n    };\n    dispatch(actions.showWarningMessage(confirmationWarning));\n  };\n\n  if (isDisabled) {\n    return null;\n  }\n\n  return (\n    <div\n      className={classNames({\n        'Panel': true,\n        'BookmarksPanel': true,\n        'bookmark-outline-panel': true,\n        [panelSelector]: true,\n        'modular-ui-panel': customizableUI,\n      })}\n      data-element={DataElements.BOOKMARK_PANEL}\n    >\n      <div className=\"bookmark-outline-panel-header\">\n        <div className=\"header-title\">\n          {t('component.bookmarksPanel')}\n        </div>\n        {!isMultiSelectionMode &&\n          <Button\n            className=\"bookmark-outline-control-button\"\n            dataElement={DataElements.BOOKMARK_MULTI_SELECT}\n            label={t('action.edit')}\n            disabled={isAddingNewBookmark || pageIndexes.length === 0}\n            onClick={() => setMultiSelectionMode(true)}\n          />\n        }\n        {isMultiSelectionMode &&\n          <Button\n            className=\"bookmark-outline-control-button\"\n            dataElement={DataElements.BOOKMARK_MULTI_SELECT}\n            label={t('option.bookmarkOutlineControls.done')}\n            disabled={isAddingNewBookmark}\n            onClick={() => {\n              setMultiSelectionMode(false);\n              setSelectingBookmarks([]);\n            }}\n          />\n        }\n      </div>\n\n      <Choice\n        dataElement={DataElements.BOOKMARK_SHORTCUT_OPTION}\n        type=\"checkbox\"\n        isSwitch\n        id=\"bookmark-view-option\"\n        className=\"bookmark-switch\"\n        label={t('message.viewBookmark')}\n        checked={isBookmarkIconShortcutVisible}\n        onChange={(e) => dispatch(actions.setBookmarkIconShortcutVisibility(e.target.checked))}\n      />\n\n      {!isAddingNewBookmark && pageIndexes.length === 0 && (\n        <div className=\"msg msg-no-bookmark-outline\">{t('message.noBookmarks')}</div>\n      )}\n\n      <div className=\"bookmark-outline-row\">\n        {isAddingNewBookmark &&\n          <Bookmark\n            isAdding\n            label={`${t('component.bookmarkPage')} ${pageLabels[currentPageIndex]} - ${t('component.bookmarkTitle')}`}\n            text={bookmarks[currentPageIndex] ?? ''}\n            pageIndex={currentPageIndex}\n            onSave={(newText) => {\n              dispatch(actions.addBookmark(currentPageIndex, newText));\n              setAddingNewBookmark(false);\n            }}\n            onCancel={() => setAddingNewBookmark(false)}\n            panelSelector={panelSelector}\n          />\n        }\n\n        {pageIndexes.map((pageIndex) => (\n          <Bookmark\n            key={pageIndex}\n            panelSelector={panelSelector}\n            isMultiSelectionMode={isMultiSelectionMode}\n            label={`${t('component.bookmarkPage')} ${pageLabels[pageIndex]} - ${t('component.bookmarkTitle')}`}\n            defaultLabel={`${t('component.bookmarkPage')} ${pageLabels[pageIndex]}`}\n            text={bookmarks[pageIndex]}\n            pageIndex={pageIndex}\n            onSave={(newText) => dispatch(actions.editBookmark(pageIndex, newText))}\n            onRemove={(index) => onRemoveBookmarks([index])}\n            setSelected={(index, val) => {\n              // need to stringify the index because using 0 instead of '0' makes the val check fail\n              index = index.toString();\n              if (selectingBookmarks.find((bm) => bm === index)) {\n                if (!val) {\n                  setSelectingBookmarks(selectingBookmarks.filter((bm) => bm !== index));\n                }\n              } else {\n                if (val) {\n                  setSelectingBookmarks([...selectingBookmarks, index]);\n                }\n              }\n            }}\n          />\n        ))}\n      </div>\n\n      <DataElementWrapper\n        className=\"bookmark-outline-footer\"\n        dataElement={DataElements.BOOKMARK_ADD_NEW_BUTTON_CONTAINER}\n      >\n        {isMultiSelectionMode ?\n          <>\n            <Button\n              className=\"multi-selection-button\"\n              img=\"icon-menu-add\"\n              disabled={selectingBookmarks.length > 0 || !!bookmarks[currentPageIndex] || isAddingNewBookmark}\n              onClick={() => setAddingNewBookmark(true)}\n            />\n            <Button\n              className=\"multi-selection-button\"\n              img=\"icon-delete-line\"\n              disabled={selectingBookmarks.length === 0}\n              onClick={() => onRemoveBookmarks(selectingBookmarks)}\n            />\n          </>\n          :\n          <Button\n            className=\"bookmark-outline-control-button add-new-button\"\n            img=\"icon-menu-add\"\n            dataElement={DataElements.BOOKMARK_ADD_NEW_BUTTON}\n            label={`${t('action.add')} ${t('component.bookmarkPanel')}`}\n            disabled={isAddingNewBookmark || !!bookmarks[currentPageIndex]}\n            onClick={() => setAddingNewBookmark(true)}\n          />\n        }\n      </DataElementWrapper>\n    </div>\n  );\n};\n\nexport default BookmarksPanel;\n","import BookmarksPanel from './BookmarksPanel';\n\nexport default BookmarksPanel;\n"],"sourceRoot":""}